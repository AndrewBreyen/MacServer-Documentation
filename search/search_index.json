{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MacServer Documentation \u00b6 This wiki contains documentation on how MacServer is set up and used.","title":"Home"},{"location":"#welcome-to-macserver-documentation","text":"This wiki contains documentation on how MacServer is set up and used.","title":"Welcome to MacServer Documentation"},{"location":"attributions/","text":"Attributions \u00b6 Portions of this documentation may come from application documentation. Jellyfin \u00b6 https://jellyfin.org/docs/ Docker \u00b6 What is a container: https://www.docker.com/resources/what-container/ Virtual Box \u00b6 VBoxLaunchAgent.sh: https://www.whatroute.net/installerapp2iso.html","title":"Attributions"},{"location":"attributions/#attributions","text":"Portions of this documentation may come from application documentation.","title":"Attributions"},{"location":"attributions/#jellyfin","text":"https://jellyfin.org/docs/","title":"Jellyfin"},{"location":"attributions/#docker","text":"What is a container: https://www.docker.com/resources/what-container/","title":"Docker"},{"location":"attributions/#virtual-box","text":"VBoxLaunchAgent.sh: https://www.whatroute.net/installerapp2iso.html","title":"Virtual Box"},{"location":"hardware/hardware/","text":"Hardware \u00b6 Mac \u00b6 Mac mini (2018) Processor: 3.6 GHz Quad-Core Intel Core i3 Memory: 8 GB 2667 MHz DDR4 Graphics: Intel UHD Graphics 630 1536 MB Smart Devices \u00b6 ConBee II The Universal Zigbee USB Gateway","title":"Hardware"},{"location":"hardware/hardware/#hardware","text":"","title":"Hardware"},{"location":"hardware/hardware/#mac","text":"Mac mini (2018) Processor: 3.6 GHz Quad-Core Intel Core i3 Memory: 8 GB 2667 MHz DDR4 Graphics: Intel UHD Graphics 630 1536 MB","title":"Mac"},{"location":"hardware/hardware/#smart-devices","text":"ConBee II The Universal Zigbee USB Gateway","title":"Smart Devices"},{"location":"hardware/zigbee-conbee/","text":"Zigbee-Conbee \u00b6 Info Install deCONZ on a Pi Installing Conbee on Pi \u00b6 Download the latest SD Card image of the Raspbian Buster Headless version from https://www.phoscon.de/en/conbee2/sdcard Flash SD Card using Balena Etcher Plug Pi into eero Find IP address of Pi using eero app","title":"Zigbee-Conbee"},{"location":"hardware/zigbee-conbee/#zigbee-conbee","text":"Info Install deCONZ on a Pi","title":"Zigbee-Conbee"},{"location":"hardware/zigbee-conbee/#installing-conbee-on-pi","text":"Download the latest SD Card image of the Raspbian Buster Headless version from https://www.phoscon.de/en/conbee2/sdcard Flash SD Card using Balena Etcher Plug Pi into eero Find IP address of Pi using eero app","title":"Installing Conbee on Pi"},{"location":"server-apps/","text":"Server Apps \u00b6 This section is for any server apps that are installed on the Mac, including PiHole, Home Assistant, Homebridge, Docker, Jellyfin, etc.","title":"Server Apps"},{"location":"server-apps/#server-apps","text":"This section is for any server apps that are installed on the Mac, including PiHole, Home Assistant, Homebridge, Docker, Jellyfin, etc.","title":"Server Apps"},{"location":"server-apps/AnyDesk/","text":"AnyDesk \u00b6 Info AnyDesk is used for Remote Desktop access to the computer off-network. Teamviewer usage is now depricated. Install \u00b6 Install AnyDesk full installation via DMG Download AnyDesk Login with account: \u00b6 Account -> My Account Set Unattended Access Password: \u00b6 Use Bitwarden Password generator to create a secure passphrase. Save this password in Bitwarden Include: 4+ words Word separator Capitalize Include number Example: Sprung-Armrest3-Robe-Pasted To share the password with anyone, use GPG to securely send it.","title":"AnyDesk"},{"location":"server-apps/AnyDesk/#anydesk","text":"Info AnyDesk is used for Remote Desktop access to the computer off-network. Teamviewer usage is now depricated.","title":"AnyDesk"},{"location":"server-apps/AnyDesk/#install","text":"Install AnyDesk full installation via DMG Download AnyDesk","title":"Install"},{"location":"server-apps/AnyDesk/#login-with-account","text":"Account -> My Account","title":"Login with account:"},{"location":"server-apps/AnyDesk/#set-unattended-access-password","text":"Use Bitwarden Password generator to create a secure passphrase. Save this password in Bitwarden Include: 4+ words Word separator Capitalize Include number Example: Sprung-Armrest3-Robe-Pasted To share the password with anyone, use GPG to securely send it.","title":"Set Unattended Access Password:"},{"location":"server-apps/create-vpns/","text":"VPN \u00b6 Create VM","title":"Create VPNs (WIP)"},{"location":"server-apps/create-vpns/#vpn","text":"Create VM","title":"VPN"},{"location":"server-apps/docker/","text":"Docker \u00b6 Info Docker is used to create Containers. \"A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.\" ( docker.com ) Download and install Docker from https://www.docker.com/ Once installed, Open Settings and: General Check 'Start Docker Desktop when you log in' Uncheck 'Open Docker Dashboard at startup' Resources -> Advanced CPUs: 2 Memory: 2.00 GB Swap: 1 GB Disk image size: 16 GB Resources -> File Sharing Delete any existing file shares, and add: /Users/Shared/nodered_data /Users/Shared/xmltvdata","title":"Docker"},{"location":"server-apps/docker/#docker","text":"Info Docker is used to create Containers. \"A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.\" ( docker.com ) Download and install Docker from https://www.docker.com/ Once installed, Open Settings and: General Check 'Start Docker Desktop when you log in' Uncheck 'Open Docker Dashboard at startup' Resources -> Advanced CPUs: 2 Memory: 2.00 GB Swap: 1 GB Disk image size: 16 GB Resources -> File Sharing Delete any existing file shares, and add: /Users/Shared/nodered_data /Users/Shared/xmltvdata","title":"Docker"},{"location":"server-apps/homeassistant/","text":"Home Assistant \u00b6 Last tested version: Virtualbox: Version 7.0.11 r158813 (Qt5.15.2) macOS: Ventura 13.5.1 Home Assistant: Home Assistant 2023.8.3 Supervisor 2023.08.1 Operating System 10.4 Frontend 20230802.1 - latest Warning Make sure you are using Virtualbox Version 7.0.11 r158813 (Qt5.15.2) , or this may not work. Prerequisites \u00b6 Virtualbox https://www.virtualbox.org/wiki/Downloads Version required: VirtualBox-7.0.11 Download \u00b6 Download the latest VDI from virtualbox.org/wiki/Testbuilds Latest validated version: haos_ova-10.4.vdi Install \u00b6 Create VM \u00b6 Create VM as detailed at home-assistant.io/installation/macos/#hypervisor-specific-configuration Minimum recommended config: 2 GB Memory 32 GB Storage 2vCPU Config I use: 4096 MB (4 GB) Memory 4vCPU Post VM Creation \u00b6 After creating the VM, configure it. Edit the Settings of the VM and go to System > Motherboard . Select Enable EFI . Then go to Network > Adapter 1 . Choose Bridged Adapter and choose your network adapter. Usage \u00b6 Devices and Services \u00b6 There are four services that are used Tuya deCONZ Roku Jellyfin Tuya Platform plugin \u00b6 Name: TuyaPlatform Username: andrew.breyen@gmail.com Password: [REDACTED] Access ID: [REDACTED] Access Key: [REDACTED] Language Code: en Project Type: PaaS PaaS Platform: Smart Life Country Code: 1 Note on Tuya Password Tyua account - for andrew's devices only Smart Life account - for nowthen devices only Note on Access ID/Access Key: Find Access ID/Access key at Tuya Cloud Project Name/ Description Usage Home Assistant - Andrew Andrew Home Assistant Homebridge - Andrew Andrew Homebridge Access Homebridge - Nowthen Current Nowthen cloud access Home (DELETE NOTUSED) Not used for anything Find Access ID/Access key deCONZ Plugin \u00b6 The deCONZ plugin allows integration with the deCONZ software, which is used for Zigbee device management. Platform Name: deCONZ Configuration Details \u00b6 Host: [IP Address of your deCONZ instance] Port: [Port Number of your deCONZ instance] API Key: [API Key for deCONZ integration] Other Configurations: [Any additional configurations required] Roku Plugin \u00b6 The Roku plugin enables interaction with Roku devices, providing control and status updates. Platform Name: Roku Configuration Details \u00b6 Roku IP Address: [IP Address of your Roku device] API Key: [API Key for Roku integration] Other Configurations: [Any additional configurations required] Jellyfin Plugin \u00b6 The Jellyfin plugin allows integration with the Jellyfin media server, offering media streaming and management. Platform Name: Jellyfin Configuration Details \u00b6 Jellyfin Server: [URL or IP Address of your Jellyfin server] API Key: [API Key for Jellyfin integration] Other Configurations: [Any additional configurations required] Scripts \u00b6 https://github.com/AndrewBreyen/homeassistant-scripts","title":"Home Assistant"},{"location":"server-apps/homeassistant/#home-assistant","text":"Last tested version: Virtualbox: Version 7.0.11 r158813 (Qt5.15.2) macOS: Ventura 13.5.1 Home Assistant: Home Assistant 2023.8.3 Supervisor 2023.08.1 Operating System 10.4 Frontend 20230802.1 - latest Warning Make sure you are using Virtualbox Version 7.0.11 r158813 (Qt5.15.2) , or this may not work.","title":"Home Assistant"},{"location":"server-apps/homeassistant/#prerequisites","text":"Virtualbox https://www.virtualbox.org/wiki/Downloads Version required: VirtualBox-7.0.11","title":"Prerequisites"},{"location":"server-apps/homeassistant/#download","text":"Download the latest VDI from virtualbox.org/wiki/Testbuilds Latest validated version: haos_ova-10.4.vdi","title":"Download"},{"location":"server-apps/homeassistant/#install","text":"","title":"Install"},{"location":"server-apps/homeassistant/#create-vm","text":"Create VM as detailed at home-assistant.io/installation/macos/#hypervisor-specific-configuration Minimum recommended config: 2 GB Memory 32 GB Storage 2vCPU Config I use: 4096 MB (4 GB) Memory 4vCPU","title":"Create VM"},{"location":"server-apps/homeassistant/#post-vm-creation","text":"After creating the VM, configure it. Edit the Settings of the VM and go to System > Motherboard . Select Enable EFI . Then go to Network > Adapter 1 . Choose Bridged Adapter and choose your network adapter.","title":"Post VM Creation"},{"location":"server-apps/homeassistant/#usage","text":"","title":"Usage"},{"location":"server-apps/homeassistant/#devices-and-services","text":"There are four services that are used Tuya deCONZ Roku Jellyfin","title":"Devices and Services"},{"location":"server-apps/homeassistant/#scripts","text":"https://github.com/AndrewBreyen/homeassistant-scripts","title":"Scripts"},{"location":"server-apps/homebridge/","text":"Homebridge \u00b6 Info Homebridge is used for Home Controls of Plugs, Garage Door. Install locally \u00b6 Follow instrictions on the README of the Homebridge Repo Once installed, and hb-service has been ran: In the Web UI: Click \"Get Started\" Create an admin user and specify password Click \"Open Dashboard\" Install plugins \u00b6 Homebridge Tuya Platform https://github.com/tuya/tuya-homebridge Configure Homebridge Tuya Platform plugin \u00b6 Name: TuyaPlatform Username: andrew.breyen@gmail.com Password: [REDACTED] -- password of Tuya account Access ID: [REDACTED] Access Key: [REDACTED] Language Code: en Project Type: PaaS PaaS Platform: Smart Life Country Code: 1 Setup and Configure \u00b6 Once the Homebridge Tuya Platform plugin is added, click the power icon on the top right to restart Once back up, click Accessories and verify that all accessories have been added Scan QR code from Status screen using Home App -> Add Accessories Add the bridge to room ZAccessories , continue setup within Home app, place accessories into correct rooms Usage \u00b6 Login to the Homebridge console by using any device connected to home network: Go to: http://macserver.local:8581/ Login with username and password of admin account","title":"Homebridge"},{"location":"server-apps/homebridge/#homebridge","text":"Info Homebridge is used for Home Controls of Plugs, Garage Door.","title":"Homebridge"},{"location":"server-apps/homebridge/#install-locally","text":"Follow instrictions on the README of the Homebridge Repo Once installed, and hb-service has been ran: In the Web UI: Click \"Get Started\" Create an admin user and specify password Click \"Open Dashboard\"","title":"Install locally"},{"location":"server-apps/homebridge/#install-plugins","text":"Homebridge Tuya Platform https://github.com/tuya/tuya-homebridge","title":"Install plugins"},{"location":"server-apps/homebridge/#configure-homebridge-tuya-platform-plugin","text":"Name: TuyaPlatform Username: andrew.breyen@gmail.com Password: [REDACTED] -- password of Tuya account Access ID: [REDACTED] Access Key: [REDACTED] Language Code: en Project Type: PaaS PaaS Platform: Smart Life Country Code: 1","title":"Configure Homebridge Tuya Platform plugin"},{"location":"server-apps/homebridge/#setup-and-configure","text":"Once the Homebridge Tuya Platform plugin is added, click the power icon on the top right to restart Once back up, click Accessories and verify that all accessories have been added Scan QR code from Status screen using Home App -> Add Accessories Add the bridge to room ZAccessories , continue setup within Home app, place accessories into correct rooms","title":"Setup and Configure"},{"location":"server-apps/homebridge/#usage","text":"Login to the Homebridge console by using any device connected to home network: Go to: http://macserver.local:8581/ Login with username and password of admin account","title":"Usage"},{"location":"server-apps/jellyfin/","text":"Jellyfin \u00b6 Info Jellyfin is used to serve media content, manage and record live TV content, and more. Download \u00b6 Download the latest version of installer/jellyfin_x.x.x.dmg from https://repo.jellyfin.org/releases/server/macos/versions/stable/installer/ Open downloaded file, drag Jellyfin to Applications folder Add to Login Items \u00b6 Add Jellyfin to Login Items macOS System Settings -> General -> Login Items Open Web UI \u00b6 Click the icon in the menu bar and choose 'Launch Web UI' Setup Jellyfin Default settings Create a primary Admin user Configure Libraries \u00b6 Click \"Add Media Library\" Choose \"Content Type\" -> content type of your folder (likely 'Movies' or 'Shows') Click + Add the folder that contains the specified Content Type files Repeat for other libraries Live TV Configuration \u00b6 (click to expand) Static IP address: \u00b6 Find HDHomeRun MAC address at http://hdhomerun.local/system.html . Info If this URL is not working, first locate the IP address of HDHomeRun on modem Web UI at http://192.168.0.1/modemstatus_landevicelist.html and use the IP Address instead of hdhomerun.local In modem settings -> Advanced Setup -> DHCP Reservation: Enter (or choose) the MAC address and set a static IP (whatever IP was already set on the HDHR system menu web page) Setup Live TV \u00b6 Follow the \"Manual Setup\" directions located at: https://jellyfin.org/docs/general/server/live-tv/setup-guide.html To find the IP address of the HDHomeRun, go to the web UI at http://hdhomerun.local/system.html Once setup, change recording paths in Dashboard -> DVR. Change these to folders on the external hard drive. If you wish to separate Movies and Shows, set a recording path. If you wish to group them all together, just specify a default recording path. Add Guide Data \u00b6 Create an account at https://tvlistings.zap2it.com/ Warning Ensure that the password you use here is not used for ANYTHING else. This password will be stored as a command line parameter in the Docker container. Create a folder on the Mac: /Users/Shared/xmltvdata Install Docker Desktop Settings -> General -> Start Docker Desktop when you log in Settings -> Resources -> File Sharing: Remove existing mounts and add /Users/Shared/xmltvdata Create a Docker container for the Zap2XML Docker Container Open Docker Desktop app Run terminal command: replace your_zap2it_email@email.com and your_zap2it_password with your https://tvlistings.zap2it.com/ account details. docker run --restart = always -d --name zap2xml -v /Users/Shared/xmltvdata:/data -e USERNAME = your_zap2it_email@email.com -e PASSWORD = your_zap2it_password -e OPT_ARGS = \"-I -D -Z 55303\" -e XMLTV_FILENAME = xmltv.xml shuaiscott/zap2xml By default, new guide data will be fetched by this Docker container every 12 hours. Additional command line arguments can be added/changed. See details on GitHub - shuaiscott/zap2xml README. Info If troubleshooting is required, and the container needs to be added again, ensure the container and images are deleted before recreating using docker run command Open the container Cick on on zap2xml from the 'Containers' view Click Logs Let the Container run. When complete, a status message will print like this: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds Verify File In macOS Finder, verify that a xmltv.xml file was created at location /Users/Shared/xmltvdata . File should start with something like: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE tv SYSTEM \"xmltv.dtd\"> <tv source-info-url= \"http://tvlistings.zap2it.com/\" source-info-name= \"zap2it.com\" generator-info-name= \"zap2xml\" generator-info-url= \"zap2xml@gmail.com\" > <channel id= \"I2.1.21634.zap2it.com\" > <display-name> 2.1 KTCADT </display-name> <display-name> 2.1 </display-name> <display-name> KTCADT </display-name> <icon src= \"https://zap2it.tmsimg.com/h3/NowShowing/21634/s32356_h3_aa.png\" /> Scroll down past the <channel></channel> sections, and verify that there are </programme></programme> tags, with contents similar to <programme start= \"20220311023000 +0000\" stop= \"20220311040000 +0000\" channel= \"I2.1.21634.zap2it.com\" > <title lang= \"en\" > Endeavour: The Evolution </title> <desc lang= \"en\" > A look at how \u2026.. </desc> <category lang= \"en\" > Documentary </category> <category lang= \"en\" > Special </category> <length units= \"minutes\" > 90 </length> <icon src= \"https://zap2it.tmsimg.com/assets/p21373423_b_v13_aa.jpg\" /> <url> https://tvlistings.zap2it.com//overview.html?programSeriesId=SH04161006 &amp; tmsId=SH041610060000 </url> <episode-num system= \"dd_progid\" > SH04161006.0000 </episode-num> <previously-shown /> <subtitles type= \"teletext\" /> </programme> Once the file looks correct, it can be added into Jellyfin. Add the created file to Jellyfin from Administration Dashboard -> Live TV -> TV Guide Data Providers -> XMLTV See details on Adding Guide Data - Setup Guide | Documentation - Jellyfin Project Post Processing \u00b6 Jellyfin supports Post Processing of recorded Live TV shows. This can be used to transcode the recording to a specific format that does not require transcoding on the fly when playing back, extract subtitles, remove commercials, and more. More details on post processing is available on Live TV Post Processing | Documentation - Jellyfin Project Prerequisites \u00b6 Install using Brew : Python Python3 Pip Pip3 ffmpeg if using Slack notifications: slack_sdk Create Scripts \u00b6 Create Folders: /Users/Shared/Scripts /Users/Shared/Scripts/logs Create Files: /Users/Shared/Scripts/run_post_processor.sh /Users/Shared/Scripts/record_post_process.py Edit Scripts: Use VSCode or another code editor to add code into these scripts. Copy and paste from GitHub links: run_post_processor.sh record_post_process.py In run_post_processor.sh : Change logging directory to /Users/Shared/Scripts Change Python path to the result of which python3 Change path of record_post_process.py to /Users/Shared/Scripts/record_post_process.py In record_post_process.py : Change logging directory to /Users/Shared/Scripts/logs Add Slack token If desired, change deleting non-transcoded file to keep original file and move Make shell script executable -- run in a terminal: chmod +x /Users/Shared/Scripts/run_post_processor.sh Add to Jellyfin \u00b6 In Jellyfin Dashboard/DVR/Recording Post Processing settings: Set \"Post-processing application\" to your shell script which calls your actual post processor (details of this 'actual' post processor script below). In this example, that would be /Users/Shared/Scripts/run_post_processor.sh Set \"Post-processor command line arguments\" to \"{path}\" Test Python Script \u00b6 Record a show from the Jellyfin Web UI (this recording can be just a few seconds long) Troubleshoot by viewing logs at /Users/Shared/Scripts/logs/* .","title":"Jellyfin"},{"location":"server-apps/jellyfin/#jellyfin","text":"Info Jellyfin is used to serve media content, manage and record live TV content, and more.","title":"Jellyfin"},{"location":"server-apps/jellyfin/#download","text":"Download the latest version of installer/jellyfin_x.x.x.dmg from https://repo.jellyfin.org/releases/server/macos/versions/stable/installer/ Open downloaded file, drag Jellyfin to Applications folder","title":"Download"},{"location":"server-apps/jellyfin/#add-to-login-items","text":"Add Jellyfin to Login Items macOS System Settings -> General -> Login Items","title":"Add to Login Items"},{"location":"server-apps/jellyfin/#open-web-ui","text":"Click the icon in the menu bar and choose 'Launch Web UI' Setup Jellyfin Default settings Create a primary Admin user","title":"Open Web UI"},{"location":"server-apps/jellyfin/#configure-libraries","text":"Click \"Add Media Library\" Choose \"Content Type\" -> content type of your folder (likely 'Movies' or 'Shows') Click + Add the folder that contains the specified Content Type files Repeat for other libraries","title":"Configure Libraries"},{"location":"server-apps/jellyfin/#live-tv-configuration","text":"(click to expand)","title":"Live TV Configuration"},{"location":"server-apps/jellyfin/#static-ip-address","text":"Find HDHomeRun MAC address at http://hdhomerun.local/system.html . Info If this URL is not working, first locate the IP address of HDHomeRun on modem Web UI at http://192.168.0.1/modemstatus_landevicelist.html and use the IP Address instead of hdhomerun.local In modem settings -> Advanced Setup -> DHCP Reservation: Enter (or choose) the MAC address and set a static IP (whatever IP was already set on the HDHR system menu web page)","title":"Static IP address:"},{"location":"server-apps/jellyfin/#setup-live-tv","text":"Follow the \"Manual Setup\" directions located at: https://jellyfin.org/docs/general/server/live-tv/setup-guide.html To find the IP address of the HDHomeRun, go to the web UI at http://hdhomerun.local/system.html Once setup, change recording paths in Dashboard -> DVR. Change these to folders on the external hard drive. If you wish to separate Movies and Shows, set a recording path. If you wish to group them all together, just specify a default recording path.","title":"Setup Live TV"},{"location":"server-apps/jellyfin/#add-guide-data","text":"Create an account at https://tvlistings.zap2it.com/ Warning Ensure that the password you use here is not used for ANYTHING else. This password will be stored as a command line parameter in the Docker container. Create a folder on the Mac: /Users/Shared/xmltvdata Install Docker Desktop Settings -> General -> Start Docker Desktop when you log in Settings -> Resources -> File Sharing: Remove existing mounts and add /Users/Shared/xmltvdata Create a Docker container for the Zap2XML Docker Container Open Docker Desktop app Run terminal command: replace your_zap2it_email@email.com and your_zap2it_password with your https://tvlistings.zap2it.com/ account details. docker run --restart = always -d --name zap2xml -v /Users/Shared/xmltvdata:/data -e USERNAME = your_zap2it_email@email.com -e PASSWORD = your_zap2it_password -e OPT_ARGS = \"-I -D -Z 55303\" -e XMLTV_FILENAME = xmltv.xml shuaiscott/zap2xml By default, new guide data will be fetched by this Docker container every 12 hours. Additional command line arguments can be added/changed. See details on GitHub - shuaiscott/zap2xml README. Info If troubleshooting is required, and the container needs to be added again, ensure the container and images are deleted before recreating using docker run command Open the container Cick on on zap2xml from the 'Containers' view Click Logs Let the Container run. When complete, a status message will print like this: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds Verify File In macOS Finder, verify that a xmltv.xml file was created at location /Users/Shared/xmltvdata . File should start with something like: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE tv SYSTEM \"xmltv.dtd\"> <tv source-info-url= \"http://tvlistings.zap2it.com/\" source-info-name= \"zap2it.com\" generator-info-name= \"zap2xml\" generator-info-url= \"zap2xml@gmail.com\" > <channel id= \"I2.1.21634.zap2it.com\" > <display-name> 2.1 KTCADT </display-name> <display-name> 2.1 </display-name> <display-name> KTCADT </display-name> <icon src= \"https://zap2it.tmsimg.com/h3/NowShowing/21634/s32356_h3_aa.png\" /> Scroll down past the <channel></channel> sections, and verify that there are </programme></programme> tags, with contents similar to <programme start= \"20220311023000 +0000\" stop= \"20220311040000 +0000\" channel= \"I2.1.21634.zap2it.com\" > <title lang= \"en\" > Endeavour: The Evolution </title> <desc lang= \"en\" > A look at how \u2026.. </desc> <category lang= \"en\" > Documentary </category> <category lang= \"en\" > Special </category> <length units= \"minutes\" > 90 </length> <icon src= \"https://zap2it.tmsimg.com/assets/p21373423_b_v13_aa.jpg\" /> <url> https://tvlistings.zap2it.com//overview.html?programSeriesId=SH04161006 &amp; tmsId=SH041610060000 </url> <episode-num system= \"dd_progid\" > SH04161006.0000 </episode-num> <previously-shown /> <subtitles type= \"teletext\" /> </programme> Once the file looks correct, it can be added into Jellyfin. Add the created file to Jellyfin from Administration Dashboard -> Live TV -> TV Guide Data Providers -> XMLTV See details on Adding Guide Data - Setup Guide | Documentation - Jellyfin Project","title":"Add Guide Data"},{"location":"server-apps/jellyfin/#post-processing","text":"Jellyfin supports Post Processing of recorded Live TV shows. This can be used to transcode the recording to a specific format that does not require transcoding on the fly when playing back, extract subtitles, remove commercials, and more. More details on post processing is available on Live TV Post Processing | Documentation - Jellyfin Project","title":"Post Processing"},{"location":"server-apps/macos-server/","text":"macOS Server \u00b6 Warning As of April 21, 2022, Apple has discontinued macOS Server. Existing macOS Server customers can continue to download and use the app with macOS Monterey. Many of the features of macos Server are already available built-in to macOS, and many features of macOS Server are not used in this MacServer environment. For more details see https://support.apple.com/en-us/HT208312 Download macOS Server from the App Store Users \u00b6 Create users within macOS Server app for Dan/Nancy/Matt/Andrew Groups \u00b6 Create a User Group AllLocalUsers with all local users","title":"macOS Server"},{"location":"server-apps/macos-server/#macos-server","text":"Warning As of April 21, 2022, Apple has discontinued macOS Server. Existing macOS Server customers can continue to download and use the app with macOS Monterey. Many of the features of macos Server are already available built-in to macOS, and many features of macOS Server are not used in this MacServer environment. For more details see https://support.apple.com/en-us/HT208312 Download macOS Server from the App Store","title":"macOS Server"},{"location":"server-apps/macos-server/#users","text":"Create users within macOS Server app for Dan/Nancy/Matt/Andrew","title":"Users"},{"location":"server-apps/macos-server/#groups","text":"Create a User Group AllLocalUsers with all local users","title":"Groups"},{"location":"server-apps/node-red/","text":"Node-RED \u00b6 Info Node-RED is used to control automations that require more settings/control than HomeKit or HomeBridge can provide natively. Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.\" Installation \u00b6 Prerequisites: npm installed Open a terminal and run sudo npm install -g --unsafe-perm node-red Once you see a message from the terminal similar to Welcome to Node-RED =================== 2 Oct 23:26:06 - [info] Node-RED version: v3.0.2 2 Oct 23:26:06 - [info] Node.js version: v16.16.0 ... 2 Oct 23:26:07 - [info] Started flows Node-RED has been successfully installed! Exit Node-RED by pressing Ctrl + C (will be restarted later using pm2 to run in the background) More information available at: https://nodered.org/docs/getting-started/local Enabling Node-RED to start on computer boot \u00b6 Install PM2: In a terminal, run: sudo npm install -g pm2 Determine the exact location of the node-red command: run which node-red in a terminal Tell PM2 to run Node-Red: run pm2 start /path/to/node-red -- -v in a terminal, replacing /path/to/node-red with the result of which node-red from above Temm PM2 to run on boot: Run these commands in a terminal, and follow the instructions provided pm2 save pm2 startup Reboot the machine, and verify that PM2 has started NodeRED More information: https://nodered.org/docs/faq/starting-node-red-on-boot Additional Palette items \u00b6 Once Node-RED is running and you can access via a web browser, install these additional items by clicking the three lines hamburger button in the top right, and selecting \u2018Manage Palette\u2019, then move to the \u2018Install\u2019 tab node-red node-red-contrib-cron node-red-contrib-homebridge-automation Note Ensure the correct Palette item is chosen -- there are two versions available node-red-contrib-slack-files node-red-contrib-stoptimer Importing Flows \u00b6 Go to https://github.com/AndrewBreyen/Node-RED-flows/ and pick which flow you want to start importing Copy the contents of desired flows\u2019 (use the button for ease of use) Click the three lines hamburger button in the top right, and selecting \u2018Import\u2019 Paste in value copied to clipboard Go to https://api.slack.com/apps/A03JPNEBPC4/incoming-webhooks to retrieve the Webhook URL, copy to clipboard Double click on the node(s) Paste in the Webhook URL copied to clipboard Double click on the and nodes, ensure that the correct device and Homebridge Pin are selected Repeat with the other flows you want to import Test it out!","title":"Node-RED"},{"location":"server-apps/node-red/#node-red","text":"Info Node-RED is used to control automations that require more settings/control than HomeKit or HomeBridge can provide natively. Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.\"","title":"Node-RED"},{"location":"server-apps/node-red/#installation","text":"Prerequisites: npm installed Open a terminal and run sudo npm install -g --unsafe-perm node-red Once you see a message from the terminal similar to Welcome to Node-RED =================== 2 Oct 23:26:06 - [info] Node-RED version: v3.0.2 2 Oct 23:26:06 - [info] Node.js version: v16.16.0 ... 2 Oct 23:26:07 - [info] Started flows Node-RED has been successfully installed! Exit Node-RED by pressing Ctrl + C (will be restarted later using pm2 to run in the background) More information available at: https://nodered.org/docs/getting-started/local","title":"Installation"},{"location":"server-apps/node-red/#enabling-node-red-to-start-on-computer-boot","text":"Install PM2: In a terminal, run: sudo npm install -g pm2 Determine the exact location of the node-red command: run which node-red in a terminal Tell PM2 to run Node-Red: run pm2 start /path/to/node-red -- -v in a terminal, replacing /path/to/node-red with the result of which node-red from above Temm PM2 to run on boot: Run these commands in a terminal, and follow the instructions provided pm2 save pm2 startup Reboot the machine, and verify that PM2 has started NodeRED More information: https://nodered.org/docs/faq/starting-node-red-on-boot","title":"Enabling Node-RED to start on computer boot"},{"location":"server-apps/node-red/#additional-palette-items","text":"Once Node-RED is running and you can access via a web browser, install these additional items by clicking the three lines hamburger button in the top right, and selecting \u2018Manage Palette\u2019, then move to the \u2018Install\u2019 tab node-red node-red-contrib-cron node-red-contrib-homebridge-automation Note Ensure the correct Palette item is chosen -- there are two versions available node-red-contrib-slack-files node-red-contrib-stoptimer","title":"Additional Palette items"},{"location":"server-apps/node-red/#importing-flows","text":"Go to https://github.com/AndrewBreyen/Node-RED-flows/ and pick which flow you want to start importing Copy the contents of desired flows\u2019 (use the button for ease of use) Click the three lines hamburger button in the top right, and selecting \u2018Import\u2019 Paste in value copied to clipboard Go to https://api.slack.com/apps/A03JPNEBPC4/incoming-webhooks to retrieve the Webhook URL, copy to clipboard Double click on the node(s) Paste in the Webhook URL copied to clipboard Double click on the and nodes, ensure that the correct device and Homebridge Pin are selected Repeat with the other flows you want to import Test it out!","title":"Importing Flows"},{"location":"server-apps/pihole/","text":"Pihole \u00b6 Info Pihole is used as a network wide Ad blocker using DNS. Note There are two ways to install PiHole. If installing from scratch, go to Set Up From Scratch section If installing from a precreated .OVA Virtual Machine file, go to the Set Up From Virtual Machine File section Set Up From Scratch \u00b6 Note Use these directions if setting up from scratch Create a VM using VirtualBox. See Create VM for details. Install PiHole \u00b6 RUN in terminal of PiHole VM: curl -sSL https://install.pi-hole.net | bash More details on installation can be found at https://github.com/pi-hole/pi-hole/#curl--ssl-httpsinstallpi-holenet--bash When you get to the blue \"GUI\" screen: Majorly accept default settings. Read through and change as you wish. When prompted for 'Upstream DNS Provider;, select which one you want. They all pretty much do the same thing. Recommendation: OpenDNS Install the suggested block lists (usually 'StevenBlack's Unified Hosts List' is the default) Install the Admin Web Interface, lighttpd and required PHP modules Enable Query logging if you wish Once installation is complete, note the 'Admin Webpage Login Password' -- The password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable the password by setting an empty password) Finalize Setup \u00b6 Regardless if setting up PiHole from scratch, or from a Virtual Machine File, some final configuration/verification is required. Continue to Set the VM to auto-launch in headless mode on Mac login Set Up From Virtual Machine File \u00b6 Note Use these directions if setting up PiHole from a Virtual Machine .OVA file Virtualbox Installation and Importing Applicance \u00b6 Download and install Virtualbox from https://www.virtualbox.org Download OVA file from OneDrive (Access to this link is restricted -- please confirm if you have access) Open Virtualbox and click 'Import' Click the folder icon next to the 'File' box and pick the .OVA file Click 'Continue' Appliance Settings: Change 'MAC Address Policy' to Include all network adapter MAC addresses. Leave all other settings the same. Click 'Import' Verify Settings \u00b6 Once the Applicance is imported, verify that the settings match the ones outlined above Ensure the correct IP address is reserved in the eero app. Details outlined above Start Up \u00b6 Start VM in headless mode (click arrow next to start -> headless mode) Click 'Show' Verify Connectivity \u00b6 Verify internet connectivity by entering command ping google.com . If you see a response similar to: 64 bytes from 142.250.191.238: icmp_seq=93 ttl=57 time=42.931 ms the VM can reach the internet. Press Ctrl + C to exit. Verify IP Address by entering command ip addr . Look at the result for the inet 192.168.4.x line. It should be the IP address specified in the eero reservation. 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 .... 2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 08:00:27:1a:f8:19 brd ff:ff:ff:ff:ff:ff inet 192.168.4.4/22 metric 100 brd 192.168.7.255 scope global dynamic enp0s3 valid_lft 14039sec preferred_lft 14039sec .... Finalize Setup \u00b6 Regardless if setting up PiHole from scratch, or from a Virtual Machine File, some final configuration/verification is required. Continue to Set the VM to auto-launch in headless mode on Mac login Set the VM to auto-launch in headless mode on Mac login\u00b6 \u00b6 Moved to Set the VM to auto-launch in headless mode on Mac login Configure PiHole \u00b6 Remove or change admin web page password: RUN in terminal of PiHole VM: sudo pihole -a -p Open the Web UI (http://your.static.ip.address/admin) Configure as you wish Set DHCP Server \u00b6 Open the eero app Go to Settings -> Network Settings -> DNS Set to 'Custom' Set 'IPv4 Primary' to the static IP address of PiHole Set 'IPv4 Secondary' to a backup DNS provider to use. Available Providers Usually it's a good idea to use the same DNS provider that you selected during PiHole setup. However, this is not required. Some available providers: OpenDNS: 208.67.222.222 Google: 8.8.8.8 CloudFlare: 1.1.1.1 Warning You can choose to not supply a secondary provider to force PiHole to be used exclusively. However, if a secondary DNS provider is not set, if PiHole is down or unavailable to reqpond to queries, DNS queries will not be able to be resolved, resulting in no internet access. Once the DNS server is set, Congrats! Pihole is now in use for all devices on the network. You can test PiHole by visiting a website that previously had ads, they should be blocked now :) Troubleshooting Sites not Loading \u00b6 Pihole is a tracking and ad-blocker. Because of this, some sites may not load, or be missing content. Temporarily Disable Pihole \u00b6 If this is a one-off thing that you need to load, you can temporarily disable Pihole across the whole network. Open the PiHole Web UI Click 'Disable' Choose an amount of time to disable. 5 minutes is usually sufficent. PiHole is now disabled, and will be automatically re-enabled once the time elapses. Add a site to the whitelist \u00b6 Open the PiHole Web UI Click 'Whitelist' Type the domain where you are encountering issues in the 'Domain' field. Add any comments as needed Check the 'Add domain as wildcard' box Click 'Add to Whitelist' Use the Audit Log \u00b6 Audit Log will show the top allowed and blocked queries with quick access to blacklist or whitelist them Open the PiHole Web UI Click 'Tools' -> 'Audit Log' Updating Pihole (Pihole and underlying Ubuntu OS) \u00b6 If you see red text at the bottom of the PiHole web UI \u2018Update Available\u2019, it needs an update. This is currently a manual process, work in progress to automate it. There are two options, both do exactly the same thing. The SSH option may be easier. Via SSH \u00b6 Pihole Updates \u00b6 Open a Terminal and enter command: ssh pihole@pi.hole If you get a message similar to: The authenticity of host 'pi.hole (192.168.0.4)' can't be established. ED25519 key fingerprint is SHA256:jWxxjslC9ObhMty4d0UNERghKP6UWmetfEj80CKW6QY. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:8: 192.168.0.4 Are you sure you want to continue connecting (yes/no/[fingerprint])? This is likely because you have not connected to the PiHole VM using SSH previously, and your computer cannot verify the authenticity of the server computer. Verify the IP address is what you expect (in this example, 192.168.0.4 ) and if it\u2019s correct, type yes at the prompt. After you have sone this once, you likely will not have to do it again, unless the fingerprint key changes. At the prompt pihole@pi.hole's password: enter the PiHole user password. Once successfully connected, you should see a prompt similar to pihole@pihole:~$ . You are now SSHed into the PiHole VM! Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! Ubuntu Updates \u00b6 It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used. Do you want to continue? [Y/n] Enter Y Wait for it to update. This may take a while, depending on the number of updates. Via Apple Remote Desktop \u00b6 Pihole Updates \u00b6 Open Apple Remote Desktop Select MacServer from All Computers Click on Control or from the taskbar, or choose Interact > Control A new window will open with the MacServer display. From the Dock, Applications Folder or Spotlight, open VirtualBox Ensure Pihole is selected in the sidebar Click Show A new window will open with the PiHole VM. In that new window, ensure you have a pihole@pihole:~$ prompt. If you do not, press Enter a few times to get to a new line. Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! Ubuntu Updates \u00b6 It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used. Do you want to continue? [Y/n] Enter Y Wait for it to update. This may take a while, depending on the number of updates.","title":"Pihole"},{"location":"server-apps/pihole/#pihole","text":"Info Pihole is used as a network wide Ad blocker using DNS. Note There are two ways to install PiHole. If installing from scratch, go to Set Up From Scratch section If installing from a precreated .OVA Virtual Machine file, go to the Set Up From Virtual Machine File section","title":"Pihole"},{"location":"server-apps/pihole/#set-up-from-scratch","text":"Note Use these directions if setting up from scratch Create a VM using VirtualBox. See Create VM for details.","title":"Set Up From Scratch"},{"location":"server-apps/pihole/#install-pihole","text":"RUN in terminal of PiHole VM: curl -sSL https://install.pi-hole.net | bash More details on installation can be found at https://github.com/pi-hole/pi-hole/#curl--ssl-httpsinstallpi-holenet--bash When you get to the blue \"GUI\" screen: Majorly accept default settings. Read through and change as you wish. When prompted for 'Upstream DNS Provider;, select which one you want. They all pretty much do the same thing. Recommendation: OpenDNS Install the suggested block lists (usually 'StevenBlack's Unified Hosts List' is the default) Install the Admin Web Interface, lighttpd and required PHP modules Enable Query logging if you wish Once installation is complete, note the 'Admin Webpage Login Password' -- The password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable the password by setting an empty password)","title":"Install PiHole"},{"location":"server-apps/pihole/#finalize-setup","text":"Regardless if setting up PiHole from scratch, or from a Virtual Machine File, some final configuration/verification is required. Continue to Set the VM to auto-launch in headless mode on Mac login","title":"Finalize Setup"},{"location":"server-apps/pihole/#set-up-from-virtual-machine-file","text":"Note Use these directions if setting up PiHole from a Virtual Machine .OVA file","title":"Set Up From Virtual Machine File"},{"location":"server-apps/pihole/#virtualbox-installation-and-importing-applicance","text":"Download and install Virtualbox from https://www.virtualbox.org Download OVA file from OneDrive (Access to this link is restricted -- please confirm if you have access) Open Virtualbox and click 'Import' Click the folder icon next to the 'File' box and pick the .OVA file Click 'Continue' Appliance Settings: Change 'MAC Address Policy' to Include all network adapter MAC addresses. Leave all other settings the same. Click 'Import'","title":"Virtualbox Installation and Importing Applicance"},{"location":"server-apps/pihole/#verify-settings","text":"Once the Applicance is imported, verify that the settings match the ones outlined above Ensure the correct IP address is reserved in the eero app. Details outlined above","title":"Verify Settings"},{"location":"server-apps/pihole/#start-up","text":"Start VM in headless mode (click arrow next to start -> headless mode) Click 'Show'","title":"Start Up"},{"location":"server-apps/pihole/#verify-connectivity","text":"Verify internet connectivity by entering command ping google.com . If you see a response similar to: 64 bytes from 142.250.191.238: icmp_seq=93 ttl=57 time=42.931 ms the VM can reach the internet. Press Ctrl + C to exit. Verify IP Address by entering command ip addr . Look at the result for the inet 192.168.4.x line. It should be the IP address specified in the eero reservation. 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 .... 2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 08:00:27:1a:f8:19 brd ff:ff:ff:ff:ff:ff inet 192.168.4.4/22 metric 100 brd 192.168.7.255 scope global dynamic enp0s3 valid_lft 14039sec preferred_lft 14039sec ....","title":"Verify Connectivity"},{"location":"server-apps/pihole/#finalize-setup_1","text":"Regardless if setting up PiHole from scratch, or from a Virtual Machine File, some final configuration/verification is required. Continue to Set the VM to auto-launch in headless mode on Mac login","title":"Finalize Setup"},{"location":"server-apps/pihole/#set-the-vm-to-auto-launch-in-headless-mode-on-mac-login","text":"Moved to Set the VM to auto-launch in headless mode on Mac login","title":"Set the VM to auto-launch in headless mode on Mac login\u00b6"},{"location":"server-apps/pihole/#configure-pihole","text":"Remove or change admin web page password: RUN in terminal of PiHole VM: sudo pihole -a -p Open the Web UI (http://your.static.ip.address/admin) Configure as you wish","title":"Configure PiHole"},{"location":"server-apps/pihole/#set-dhcp-server","text":"Open the eero app Go to Settings -> Network Settings -> DNS Set to 'Custom' Set 'IPv4 Primary' to the static IP address of PiHole Set 'IPv4 Secondary' to a backup DNS provider to use. Available Providers Usually it's a good idea to use the same DNS provider that you selected during PiHole setup. However, this is not required. Some available providers: OpenDNS: 208.67.222.222 Google: 8.8.8.8 CloudFlare: 1.1.1.1 Warning You can choose to not supply a secondary provider to force PiHole to be used exclusively. However, if a secondary DNS provider is not set, if PiHole is down or unavailable to reqpond to queries, DNS queries will not be able to be resolved, resulting in no internet access. Once the DNS server is set, Congrats! Pihole is now in use for all devices on the network. You can test PiHole by visiting a website that previously had ads, they should be blocked now :)","title":"Set DHCP Server"},{"location":"server-apps/pihole/#troubleshooting-sites-not-loading","text":"Pihole is a tracking and ad-blocker. Because of this, some sites may not load, or be missing content.","title":"Troubleshooting Sites not Loading"},{"location":"server-apps/pihole/#temporarily-disable-pihole","text":"If this is a one-off thing that you need to load, you can temporarily disable Pihole across the whole network. Open the PiHole Web UI Click 'Disable' Choose an amount of time to disable. 5 minutes is usually sufficent. PiHole is now disabled, and will be automatically re-enabled once the time elapses.","title":"Temporarily Disable Pihole"},{"location":"server-apps/pihole/#add-a-site-to-the-whitelist","text":"Open the PiHole Web UI Click 'Whitelist' Type the domain where you are encountering issues in the 'Domain' field. Add any comments as needed Check the 'Add domain as wildcard' box Click 'Add to Whitelist'","title":"Add a site to the whitelist"},{"location":"server-apps/pihole/#use-the-audit-log","text":"Audit Log will show the top allowed and blocked queries with quick access to blacklist or whitelist them Open the PiHole Web UI Click 'Tools' -> 'Audit Log'","title":"Use the Audit Log"},{"location":"server-apps/pihole/#updating-pihole-pihole-and-underlying-ubuntu-os","text":"If you see red text at the bottom of the PiHole web UI \u2018Update Available\u2019, it needs an update. This is currently a manual process, work in progress to automate it. There are two options, both do exactly the same thing. The SSH option may be easier.","title":"Updating Pihole (Pihole and underlying Ubuntu OS)"},{"location":"server-apps/pihole/#via-ssh","text":"","title":"Via SSH"},{"location":"server-apps/pihole/#via-apple-remote-desktop","text":"","title":"Via Apple Remote Desktop"},{"location":"server-apps/scrypted/","text":"Scrypted \u00b6 Info Scrypted is used to serve Video Camera Content to Apple Home. Install locally \u00b6 https://github.com/koush/scrypted/wiki/Installation:-Mac Install plugins \u00b6 HomeKit RTSP Camera Plugin Rebroadcast Plugin Configure plugins \u00b6 RTSP cameras Add 2 cameras (Front Porch, Backyard), username: wyzecam, Password: wyzecam, Snapshot URL: [blank], RTSP Stream URL: rtsp://wyzecam:wyzecam@[IP ADDR OF CAMERA]/live Homekit View console of plugin to see QR code, add accessory via iOS Home app. Add the bridge to room \u2018ZAccessories\u2019, continue setup within Home app, place accessories into correct rooms Additional plugins used by Scrypted \u00b6 OpenCV: https://opencv.org/ Used to detect motion and send homekit notifications","title":"Scrypted"},{"location":"server-apps/scrypted/#scrypted","text":"Info Scrypted is used to serve Video Camera Content to Apple Home.","title":"Scrypted"},{"location":"server-apps/scrypted/#install-locally","text":"https://github.com/koush/scrypted/wiki/Installation:-Mac","title":"Install locally"},{"location":"server-apps/scrypted/#install-plugins","text":"HomeKit RTSP Camera Plugin Rebroadcast Plugin","title":"Install plugins"},{"location":"server-apps/scrypted/#configure-plugins","text":"RTSP cameras Add 2 cameras (Front Porch, Backyard), username: wyzecam, Password: wyzecam, Snapshot URL: [blank], RTSP Stream URL: rtsp://wyzecam:wyzecam@[IP ADDR OF CAMERA]/live Homekit View console of plugin to see QR code, add accessory via iOS Home app. Add the bridge to room \u2018ZAccessories\u2019, continue setup within Home app, place accessories into correct rooms","title":"Configure plugins"},{"location":"server-apps/scrypted/#additional-plugins-used-by-scrypted","text":"OpenCV: https://opencv.org/ Used to detect motion and send homekit notifications","title":"Additional plugins used by Scrypted"},{"location":"server-apps/tdarr/","text":"Tdarr \u00b6 Info Tdarr is used to transcode media files to a preferred format. Tdarr is not currently implemented. Download \u00b6 Download Tdarr_Updater from https://docs.tdarr.io/docs/installation/windows-linux-macos Unzip downloaded file Run chmod +x /path/to/Tdarr_Updater in a terminal Run /path/to/Tdarr_Updater","title":"Tdarr"},{"location":"server-apps/tdarr/#tdarr","text":"Info Tdarr is used to transcode media files to a preferred format. Tdarr is not currently implemented.","title":"Tdarr"},{"location":"server-apps/tdarr/#download","text":"Download Tdarr_Updater from https://docs.tdarr.io/docs/installation/windows-linux-macos Unzip downloaded file Run chmod +x /path/to/Tdarr_Updater in a terminal Run /path/to/Tdarr_Updater","title":"Download"},{"location":"server-apps/timemachine-editor/","text":"Time Machine Editor \u00b6 Info Time Machine Editor is used to modify the backup frequency of Time Machine Backups This allows for space savings, as hourly snapshots are not saved, as well as performance benefits as a backup is not being created hourly. Hourly backups are likely overkill for MacServer, so this is changed using Time Machine Editor. Download and install from https://tclementdev.com/timemachineeditor/ Open the installed application from the Applications Folder and change backup frequency. Currently, this is set to backup on an interval of every 1 day. To allow these settings to take effect, instead of the default macOS settings, ensure that 'Back Up Automatically' checkbox in System Prefrences -> Time Machine is disabled.","title":"Time Machine Editor"},{"location":"server-apps/timemachine-editor/#time-machine-editor","text":"Info Time Machine Editor is used to modify the backup frequency of Time Machine Backups This allows for space savings, as hourly snapshots are not saved, as well as performance benefits as a backup is not being created hourly. Hourly backups are likely overkill for MacServer, so this is changed using Time Machine Editor. Download and install from https://tclementdev.com/timemachineeditor/ Open the installed application from the Applications Folder and change backup frequency. Currently, this is set to backup on an interval of every 1 day. To allow these settings to take effect, instead of the default macOS settings, ensure that 'Back Up Automatically' checkbox in System Prefrences -> Time Machine is disabled.","title":"Time Machine Editor"},{"location":"server-apps/virtualbox/","text":"Create VM \u00b6 Download ISO/Install VirtualBox \u00b6 Download and install the latest version of VirtualBox from https://www.virtualbox.org/wiki/Downloads Download ISO of LTS edition from https://ubuntu.com/download/server Create a Virtualbox VM \u00b6 Open Virtualbox and click 'New': Enter these settings: (these are purposefully low-powered settings, it\u2019s designed for a Raspberry Pi, so a powerful VM is not needed) Virtual machine Name and Operating System Name: VMName (probably pihole ) Machine Folder: /Users/macmini/VirtualBox VMs Type: Linux Version: Ubuntu (64-bit) Check 'Skip unattended installation' Hardware: Base Memory: 1.5 GB (1536 MB) Processors: 1 Virtual Hard Disk: Create a virtual hard disk now VDI (VirtualBox Disk Image) Dynamically Allocated Location: /Users/macmini/VirtualBox VMs/VMName/VMName.vdi Size: 10 GB Change VM Settings \u00b6 Once the VM has been created, click 'Settings', and make changes: Network Tab: Enable Network Adapter Attatched to: Bridged Name: en0: Ethernet Open Advanced Tab, leave all settings to default, but note the MAC address to use to set a static IP Storage Tab -> Controller: IDE Click on 'Empty' under Controller: IDE , then click the circle CD icon, and pick \u2018choose a disk file\u2026\u2019 Pick the downloaded ISO Click OK Set IP Address Reservation \u00b6 Open the eero app Go to Settings -> Network Settings -> Reservations and Port Forwarding Pick 'Add a reservation' Scroll to the bottom of the list, and choose 'Enter manually' Enter an IP Address to use. For convienence, use a low-number IP address (192.168.4.4) Note The IP address spreified must not be already in use, and must be within the subnet range. Keep the first three groups of numbers the same, and only change the last group. (eg 192.168.4.##) Enter the MAC Address noted previously from the network tab, using format XX:XX:XX:XX:XX:XX Click 'Save' Start Up \u00b6 Start VM in headless mode (click arrow next to start -> headless mode) Click 'Show' Accept/Allow all macOS prompts (accessibility, screen recording, etc) Install Ubuntu Server \u00b6 On first boot, press Enter when 'Try or Install Ubuntu Server' is selected, or wait 30 seconds. Once booted, continue through setup, applying settings: English If prompted to update to latest version, update to latest version US Keyboard Choose type of install: Ubuntu Server Network Connections: Check if the IP address listed matches the one set in the eero app. If it does, continue. If it does not, ensure that the MAC address in eero settings matches the MAC address on screen. Reboot the VM (Machine -> Reset) and try again. Configure proxy: leave blank Configure Ubuntu archive mirror: leave default Guided storage configuration: Leave default - 'Use an entire disk' Storage configuration: leave default Confirm destructive action: continue (NOTE -- ONLY THE VIRTUAL HARD DISK will be modified/erased.) Profile setup: name, servers name, username: set all to 'pihole'. Set a password here. SSH Setup: Install OpenSSH Server Featured Server Snaps: leave all unchecked, continue Wait for install to complete. Once 'Install complete!' is shown, choose 'Reboot Now' An error message will likely show: Please remove the installation medium, then press ENTER: Unmounting/cdrom. [FAILED] Failed unmounting /cdrom. To resolve: Close the window, choose 'Power off machine' and then 'Ok' This likely was all that is needed, but to double check, go back into Settings -> Storage -> IDE controller. It should be 'Empty' If not, click the CD icon, choose 'Remove Disk from Virtual Drive' Start the VM again in headless mode, and choose Show Once you see Ubuntu 22.04.1 LTS pihole tty1 VMName login: (may be way more text here) press enter a few times if there is lots of extra text (or don't, it doesn't matter), and login by typing username/password specified. Text or dots will not be shown while typing password. VMName login: VMUsername Password: Once you see a prompt VMUsername@VMName:~$ Ubuntu is up and running! Optional: SSH Access (may be easier to perform the following steps) Once Ubuntu Server is up and running, it may be easier to do the following steps utilizing SSH. This will allow for things like copy and paste to work, which will be handy, but not strictly required. To SSH to the VM: Open a Terminal -- either on MacServer, or on a different laptop Enter `ssh VMUsername@VMIPAddress, replacing 'VMIPAddress' with the static IP set in the eero app Enter the user password, and once you see VMUsername@VMIPAddress:~$ , you're SSHed in! This is the same as if you were using the VM through VirtualBox. See the Updating PiHole via SSH section for more details on SSH. Set the VM to auto-login \u00b6 https://askubuntu.com/a/819154 RUN in terminal of PiHole VM: sudo systemctl edit getty@tty1.service Edit the file that is generated with these contents, change username to username of VM user ( VMUsername in this case): [ Service ] ExecStart= ExecStart=-/sbin/agetty --noissue --autologin VMUsername %I $TERM Type=idle Save with Ctrl + X , Y , Enter Reboot machine (command: reboot ) and see if it auto-logs in as Pihole user. Set the VM to auto-launch in headless mode on Mac login \u00b6 Download the script vboxlaunchagent.sh from https://www.whatroute.net/software/vboxlaunchagent.sh.zip Move the downloaded file somewhere convenient, like the Desktop. whatroute.net LaunchAgents are configured with an Apple plist XML file installed in the users Library/LaunchAgents folder. When the user logs in to their account on the Mac, launchd will inspect these plist files and invoke the required program with specified arguments. It can get a bit tricky to create a plist manually. They have very fussy and very unforgiving syntax requirements. This shell script will create the plist and install it in the LaunchAgents directory. You can download the script from vboxlaunchagent.sh. Unzip the file and copy the script to a suitable directory on your machine. Run the script using this syntax: Find the name of the VM: In a terminal on MacServer directly (not the VM), run: VBoxManage list vms Should result in output similar to: macmini@macserver ~ % VBoxManage list vms \"Pihole\" { c7ac734f-3fc7-4645-997b-3c78ef32d8f4 } In this example, Pihole is the name of the VM. In a terminal, run sh path/to/vboxlaunchagent.sh --headless --verbose \"VMName\" replacing VMName with the name of the VM from the previous step, and /path/to/vboxlaunchagent.sh with the full path (likely will be ~/Downloads/vboxlaunchagent.sh if you just clicked the link above) Ensure that the output is similar to VirtualBox VM found. . . : PiHole Created temporary file . : /tmp/org.virtualbox.launch.PiHole Created Launch Agent . . : /Users/macmini/Library/LaunchAgents/org.virtualbox.launch.PiHole.plist Reboot the Mac and ensure the VM auto-starts on login (Script and explanation from https://www.whatroute.net/installerapp2iso.html )","title":"Virtualbox"},{"location":"server-apps/virtualbox/#create-vm","text":"","title":"Create VM"},{"location":"server-apps/virtualbox/#download-isoinstall-virtualbox","text":"Download and install the latest version of VirtualBox from https://www.virtualbox.org/wiki/Downloads Download ISO of LTS edition from https://ubuntu.com/download/server","title":"Download ISO/Install VirtualBox"},{"location":"server-apps/virtualbox/#create-a-virtualbox-vm","text":"Open Virtualbox and click 'New': Enter these settings: (these are purposefully low-powered settings, it\u2019s designed for a Raspberry Pi, so a powerful VM is not needed) Virtual machine Name and Operating System Name: VMName (probably pihole ) Machine Folder: /Users/macmini/VirtualBox VMs Type: Linux Version: Ubuntu (64-bit) Check 'Skip unattended installation' Hardware: Base Memory: 1.5 GB (1536 MB) Processors: 1 Virtual Hard Disk: Create a virtual hard disk now VDI (VirtualBox Disk Image) Dynamically Allocated Location: /Users/macmini/VirtualBox VMs/VMName/VMName.vdi Size: 10 GB","title":"Create a Virtualbox VM"},{"location":"server-apps/virtualbox/#change-vm-settings","text":"Once the VM has been created, click 'Settings', and make changes: Network Tab: Enable Network Adapter Attatched to: Bridged Name: en0: Ethernet Open Advanced Tab, leave all settings to default, but note the MAC address to use to set a static IP Storage Tab -> Controller: IDE Click on 'Empty' under Controller: IDE , then click the circle CD icon, and pick \u2018choose a disk file\u2026\u2019 Pick the downloaded ISO Click OK","title":"Change VM Settings"},{"location":"server-apps/virtualbox/#set-ip-address-reservation","text":"Open the eero app Go to Settings -> Network Settings -> Reservations and Port Forwarding Pick 'Add a reservation' Scroll to the bottom of the list, and choose 'Enter manually' Enter an IP Address to use. For convienence, use a low-number IP address (192.168.4.4) Note The IP address spreified must not be already in use, and must be within the subnet range. Keep the first three groups of numbers the same, and only change the last group. (eg 192.168.4.##) Enter the MAC Address noted previously from the network tab, using format XX:XX:XX:XX:XX:XX Click 'Save'","title":"Set IP Address Reservation"},{"location":"server-apps/virtualbox/#start-up","text":"Start VM in headless mode (click arrow next to start -> headless mode) Click 'Show' Accept/Allow all macOS prompts (accessibility, screen recording, etc)","title":"Start Up"},{"location":"server-apps/virtualbox/#install-ubuntu-server","text":"On first boot, press Enter when 'Try or Install Ubuntu Server' is selected, or wait 30 seconds. Once booted, continue through setup, applying settings: English If prompted to update to latest version, update to latest version US Keyboard Choose type of install: Ubuntu Server Network Connections: Check if the IP address listed matches the one set in the eero app. If it does, continue. If it does not, ensure that the MAC address in eero settings matches the MAC address on screen. Reboot the VM (Machine -> Reset) and try again. Configure proxy: leave blank Configure Ubuntu archive mirror: leave default Guided storage configuration: Leave default - 'Use an entire disk' Storage configuration: leave default Confirm destructive action: continue (NOTE -- ONLY THE VIRTUAL HARD DISK will be modified/erased.) Profile setup: name, servers name, username: set all to 'pihole'. Set a password here. SSH Setup: Install OpenSSH Server Featured Server Snaps: leave all unchecked, continue Wait for install to complete. Once 'Install complete!' is shown, choose 'Reboot Now' An error message will likely show: Please remove the installation medium, then press ENTER: Unmounting/cdrom. [FAILED] Failed unmounting /cdrom. To resolve: Close the window, choose 'Power off machine' and then 'Ok' This likely was all that is needed, but to double check, go back into Settings -> Storage -> IDE controller. It should be 'Empty' If not, click the CD icon, choose 'Remove Disk from Virtual Drive' Start the VM again in headless mode, and choose Show Once you see Ubuntu 22.04.1 LTS pihole tty1 VMName login: (may be way more text here) press enter a few times if there is lots of extra text (or don't, it doesn't matter), and login by typing username/password specified. Text or dots will not be shown while typing password. VMName login: VMUsername Password: Once you see a prompt VMUsername@VMName:~$ Ubuntu is up and running! Optional: SSH Access (may be easier to perform the following steps) Once Ubuntu Server is up and running, it may be easier to do the following steps utilizing SSH. This will allow for things like copy and paste to work, which will be handy, but not strictly required. To SSH to the VM: Open a Terminal -- either on MacServer, or on a different laptop Enter `ssh VMUsername@VMIPAddress, replacing 'VMIPAddress' with the static IP set in the eero app Enter the user password, and once you see VMUsername@VMIPAddress:~$ , you're SSHed in! This is the same as if you were using the VM through VirtualBox. See the Updating PiHole via SSH section for more details on SSH.","title":"Install Ubuntu Server"},{"location":"server-apps/virtualbox/#set-the-vm-to-auto-login","text":"https://askubuntu.com/a/819154 RUN in terminal of PiHole VM: sudo systemctl edit getty@tty1.service Edit the file that is generated with these contents, change username to username of VM user ( VMUsername in this case): [ Service ] ExecStart= ExecStart=-/sbin/agetty --noissue --autologin VMUsername %I $TERM Type=idle Save with Ctrl + X , Y , Enter Reboot machine (command: reboot ) and see if it auto-logs in as Pihole user.","title":"Set the VM to auto-login"},{"location":"server-apps/virtualbox/#set-the-vm-to-auto-launch-in-headless-mode-on-mac-login","text":"Download the script vboxlaunchagent.sh from https://www.whatroute.net/software/vboxlaunchagent.sh.zip Move the downloaded file somewhere convenient, like the Desktop. whatroute.net LaunchAgents are configured with an Apple plist XML file installed in the users Library/LaunchAgents folder. When the user logs in to their account on the Mac, launchd will inspect these plist files and invoke the required program with specified arguments. It can get a bit tricky to create a plist manually. They have very fussy and very unforgiving syntax requirements. This shell script will create the plist and install it in the LaunchAgents directory. You can download the script from vboxlaunchagent.sh. Unzip the file and copy the script to a suitable directory on your machine. Run the script using this syntax: Find the name of the VM: In a terminal on MacServer directly (not the VM), run: VBoxManage list vms Should result in output similar to: macmini@macserver ~ % VBoxManage list vms \"Pihole\" { c7ac734f-3fc7-4645-997b-3c78ef32d8f4 } In this example, Pihole is the name of the VM. In a terminal, run sh path/to/vboxlaunchagent.sh --headless --verbose \"VMName\" replacing VMName with the name of the VM from the previous step, and /path/to/vboxlaunchagent.sh with the full path (likely will be ~/Downloads/vboxlaunchagent.sh if you just clicked the link above) Ensure that the output is similar to VirtualBox VM found. . . : PiHole Created temporary file . : /tmp/org.virtualbox.launch.PiHole Created Launch Agent . . : /Users/macmini/Library/LaunchAgents/org.virtualbox.launch.PiHole.plist Reboot the Mac and ensure the VM auto-starts on login (Script and explanation from https://www.whatroute.net/installerapp2iso.html )","title":"Set the VM to auto-launch in headless mode on Mac login"},{"location":"server-apps/deprecated/teamviewer/","text":"TeamViewer \u00b6 Info Teamviewer usage is depricated. Teamviewer is used for Remote Desktop access to the computer off-network. Install TeamViewer from https://www.teamviewer.com/en-us/download/mac-os/ Login with account Enable unattended access: [CHECK] Start TeamViewer with System [CHECK] Grant Andrew Breyen Easy Access","title":"TeamViewer (Deprecated)"},{"location":"server-apps/deprecated/teamviewer/#teamviewer","text":"Info Teamviewer usage is depricated. Teamviewer is used for Remote Desktop access to the computer off-network. Install TeamViewer from https://www.teamviewer.com/en-us/download/mac-os/ Login with account Enable unattended access: [CHECK] Start TeamViewer with System [CHECK] Grant Andrew Breyen Easy Access","title":"TeamViewer"},{"location":"setup/","text":"Setup \u00b6 This section has information on steps that should be taken before installing any apps. This includes: Settings to change Remote Desktop Network Settings","title":"Setup"},{"location":"setup/#setup","text":"This section has information on steps that should be taken before installing any apps. This includes: Settings to change Remote Desktop Network Settings","title":"Setup"},{"location":"setup/additional/","text":"Additional \u00b6 Disable Dark Mode for VirtualBox \u00b6 Open terminal run:","title":"Additional Tools"},{"location":"setup/additional/#additional","text":"","title":"Additional"},{"location":"setup/additional/#disable-dark-mode-for-virtualbox","text":"Open terminal run:","title":"Disable Dark Mode for VirtualBox"},{"location":"setup/apple-remote-desktop/","text":"Apple Remote Desktop \u00b6 Info Once initial setup is completed with a keyboard, mouse, and display directly connected to the Mac, Remote Desktop can be used to remotely control the Mac when there are no peripherals attatched. To add MacServer to Apple Remote Desktop: On the client machine: Download ARD from Mac App Store Go through initial setup Once to the main screen, select 'Scanner' from the left hand side Ensure 'Bonjour' is selected on top bar, and drag 'MacServer' into 'All Computers' Enter the macmini user and password Once 'Current Status' changes to 'Available', click 'Control' or choose Interact -> Control from the menu bar.","title":"Apple Remote Desktop"},{"location":"setup/apple-remote-desktop/#apple-remote-desktop","text":"Info Once initial setup is completed with a keyboard, mouse, and display directly connected to the Mac, Remote Desktop can be used to remotely control the Mac when there are no peripherals attatched. To add MacServer to Apple Remote Desktop: On the client machine: Download ARD from Mac App Store Go through initial setup Once to the main screen, select 'Scanner' from the left hand side Ensure 'Bonjour' is selected on top bar, and drag 'MacServer' into 'All Computers' Enter the macmini user and password Once 'Current Status' changes to 'Available', click 'Control' or choose Interact -> Control from the menu bar.","title":"Apple Remote Desktop"},{"location":"setup/first-time-setup-ventura/","text":"Ventura First Time Setup \u00b6 setup mac with macmini user set static IP Add file shares Install chrome Set up Time Machine and Time Machine Editor install JellyFin using Jellyfin Docs Install brew , ffmpeg , ffmpeg-bar brew install ffmpeg npm install --global ffmpeg-progressbar-cli Install PiHole using PiHole Docs Install Homebridge using Homebridge Docs","title":"Ventura First Time Setup"},{"location":"setup/first-time-setup-ventura/#ventura-first-time-setup","text":"setup mac with macmini user set static IP Add file shares Install chrome Set up Time Machine and Time Machine Editor install JellyFin using Jellyfin Docs Install brew , ffmpeg , ffmpeg-bar brew install ffmpeg npm install --global ffmpeg-progressbar-cli Install PiHole using PiHole Docs Install Homebridge using Homebridge Docs","title":"Ventura First Time Setup"},{"location":"setup/first-time-setup/","text":"First Time Setup \u00b6 Setup Assistant \u00b6 Mac mini Essentials Documentation - Set up your Mac The first time your Mac mini starts up, Setup Assistant walks you through the simple steps needed to start using your new Mac. You can respond to all the prompts, or skip some steps and choose to complete them later. Follow the steps in Setup Assistant, including internet connection, Apple ID sign-in, etc. Keep unnecesary features turned off (screen time, Apple Pay, Store Files in iCloud, restore from backup, etc) Users \u00b6 When first setting up the Mac, create a generic \u201cMacMini\u201d (or whatever type of Mac) admin user. Take note of the password chosen. This user will be logged in and serving apps/content. Network \u00b6 The Mac needs to have a Static IP address for many purposes. Find the Ethernet Mac Address under Apple Menu (hold Option ) -> System Information -> Network Open the eero app Go to Settings -> Network Settings -> Reservations and Port Forwarding Pick 'Add a reservation' Scroll to the bottom of the list, and choose 'Enter manually' Enter an IP Address to use. For convienence, use a low-number IP address (192.168.4.2) The IP address spreified must not be already in use, and must be within the subnet range. Keep the first three groups of numbers the same, and only change the last group. (eg 192.168.4.##) Enter the MAC Address noted previously from System Information, using format XX:XX:XX:XX:XX:XX Click 'Save' Reboot Mac, and ensure that IP address listed in System Preferences is 192.168.4.2 If the IP address does not take effect: Reboot the mac again -- it may need to re-handshake with the network Forget the network and re-join Reboot the eero network from the eero app Once to the desktop... \u00b6 Create Shared Folders /Users/Shared/Scans /Users/Shared/AllShare /Users/Shared/xmltvdata (used for TV Guide Data Docker Container) /Users/Shared/nodered_data (used for Node-RED Docker Container) Install apps (Jellyfin, Homebridge, etc) Turn off Wifi from the menu bar","title":"First Time Setup"},{"location":"setup/first-time-setup/#first-time-setup","text":"","title":"First Time Setup"},{"location":"setup/first-time-setup/#setup-assistant","text":"Mac mini Essentials Documentation - Set up your Mac The first time your Mac mini starts up, Setup Assistant walks you through the simple steps needed to start using your new Mac. You can respond to all the prompts, or skip some steps and choose to complete them later. Follow the steps in Setup Assistant, including internet connection, Apple ID sign-in, etc. Keep unnecesary features turned off (screen time, Apple Pay, Store Files in iCloud, restore from backup, etc)","title":"Setup Assistant"},{"location":"setup/first-time-setup/#users","text":"When first setting up the Mac, create a generic \u201cMacMini\u201d (or whatever type of Mac) admin user. Take note of the password chosen. This user will be logged in and serving apps/content.","title":"Users"},{"location":"setup/first-time-setup/#network","text":"The Mac needs to have a Static IP address for many purposes. Find the Ethernet Mac Address under Apple Menu (hold Option ) -> System Information -> Network Open the eero app Go to Settings -> Network Settings -> Reservations and Port Forwarding Pick 'Add a reservation' Scroll to the bottom of the list, and choose 'Enter manually' Enter an IP Address to use. For convienence, use a low-number IP address (192.168.4.2) The IP address spreified must not be already in use, and must be within the subnet range. Keep the first three groups of numbers the same, and only change the last group. (eg 192.168.4.##) Enter the MAC Address noted previously from System Information, using format XX:XX:XX:XX:XX:XX Click 'Save' Reboot Mac, and ensure that IP address listed in System Preferences is 192.168.4.2 If the IP address does not take effect: Reboot the mac again -- it may need to re-handshake with the network Forget the network and re-join Reboot the eero network from the eero app","title":"Network"},{"location":"setup/first-time-setup/#once-to-the-desktop","text":"Create Shared Folders /Users/Shared/Scans /Users/Shared/AllShare /Users/Shared/xmltvdata (used for TV Guide Data Docker Container) /Users/Shared/nodered_data (used for Node-RED Docker Container) Install apps (Jellyfin, Homebridge, etc) Turn off Wifi from the menu bar","title":"Once to the desktop..."},{"location":"setup/installs/","text":"Installs \u00b6 Install these things. Brew \u00b6 In a terminal, run: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" Python \u00b6 In a terminal, run: brew install python3 Apps \u00b6 VSCode","title":"Installs"},{"location":"setup/installs/#installs","text":"Install these things.","title":"Installs"},{"location":"setup/installs/#brew","text":"In a terminal, run: /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"","title":"Brew"},{"location":"setup/installs/#python","text":"In a terminal, run: brew install python3","title":"Python"},{"location":"setup/installs/#apps","text":"VSCode","title":"Apps"},{"location":"setup/jumpcloud/","text":"Jumpcloud \u00b6 WIP","title":"Jumpcloud"},{"location":"setup/jumpcloud/#jumpcloud","text":"WIP","title":"Jumpcloud"},{"location":"setup/macos-settings-sharing/","text":"macOS Settings \u00b6 System Settings -> General -> Sharing Local hostname: MacServer.local Media Sharing \u00b6 Enter Apple ID -- currently freezes Ensure 'Computer Name' is set to MacServer File Sharing \u00b6 Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups Enable Time Machine Backups: Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination Permissions: For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write Remote Login \u00b6 [CHECK] Allow full disk access for remote users Allow access for: Only these users -> AllLocalUsers Remote Management \u00b6 Allow access for: Only these users -> click '+' and add all users. When prompted for permissions, enable everything. Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen Remote Apple Events \u00b6 Allow access for: All users Content Caching \u00b6 Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"MacOS Settings Sharing"},{"location":"setup/macos-settings-sharing/#macos-settings","text":"System Settings -> General -> Sharing Local hostname: MacServer.local","title":"macOS Settings"},{"location":"setup/macos-settings-sharing/#media-sharing","text":"Enter Apple ID -- currently freezes Ensure 'Computer Name' is set to MacServer","title":"Media Sharing"},{"location":"setup/macos-settings-sharing/#file-sharing","text":"Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups Enable Time Machine Backups: Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination Permissions: For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write","title":"File Sharing"},{"location":"setup/macos-settings-sharing/#remote-login","text":"[CHECK] Allow full disk access for remote users Allow access for: Only these users -> AllLocalUsers","title":"Remote Login"},{"location":"setup/macos-settings-sharing/#remote-management","text":"Allow access for: Only these users -> click '+' and add all users. When prompted for permissions, enable everything. Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen","title":"Remote Management"},{"location":"setup/macos-settings-sharing/#remote-apple-events","text":"Allow access for: All users","title":"Remote Apple Events"},{"location":"setup/macos-settings-sharing/#content-caching","text":"Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"Content Caching"},{"location":"setup/macos-settings/","text":"macOS Settings \u00b6 Make these changes in macOS System Preferences Users and Groups \u00b6 Login Options \u00b6 Enable automatic login for the MacMini user macmini -> Login Items \u00b6 Automatically start apps on MacMini user login Docker Jellyfin Energy Saver \u00b6 Turn Display Off after: never : testing setting this to 3 minutes [CHECK] Prevent your Mac from automatically sleeping when the display is off [CHECK] Put hard disks to sleep when possible [CHECK] Wake for network access [CHECK] Start up automatically after a power failure [CHECK] Enable Power Nap Schedule: Set to restart on Sundays at 4 AM Change in macOS Ventura macOS has changed the way power schedule is set in macOS Ventura. See updated documentation here Security and Privacy \u00b6 Privacy -> Full Disk Access \u00b6 Ensure /bin/bash is added to this list Sharing \u00b6 Ensure 'Computer Name' is set to MacServer File Sharing \u00b6 Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups Enable Time Machine Backups: Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination Permissions: For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write Remote Login \u00b6 [CHECK] Allow full disk access for remote users Allow access for: Only these users -> AllLocalUsers Remote Management \u00b6 Allow access for: Only these users -> click '+' and add all users. When prompted for permissions, enable everything. Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen Remote Apple Events \u00b6 Allow access for: All users Content Caching \u00b6 Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"macOS Settings"},{"location":"setup/macos-settings/#macos-settings","text":"Make these changes in macOS System Preferences","title":"macOS Settings"},{"location":"setup/macos-settings/#users-and-groups","text":"","title":"Users and Groups"},{"location":"setup/macos-settings/#login-options","text":"Enable automatic login for the MacMini user","title":"Login Options"},{"location":"setup/macos-settings/#macmini-login-items","text":"Automatically start apps on MacMini user login Docker Jellyfin","title":"macmini -&gt; Login Items"},{"location":"setup/macos-settings/#energy-saver","text":"Turn Display Off after: never : testing setting this to 3 minutes [CHECK] Prevent your Mac from automatically sleeping when the display is off [CHECK] Put hard disks to sleep when possible [CHECK] Wake for network access [CHECK] Start up automatically after a power failure [CHECK] Enable Power Nap Schedule: Set to restart on Sundays at 4 AM Change in macOS Ventura macOS has changed the way power schedule is set in macOS Ventura. See updated documentation here","title":"Energy Saver"},{"location":"setup/macos-settings/#security-and-privacy","text":"","title":"Security and Privacy"},{"location":"setup/macos-settings/#privacy-full-disk-access","text":"Ensure /bin/bash is added to this list","title":"Privacy -&gt; Full Disk Access"},{"location":"setup/macos-settings/#sharing","text":"Ensure 'Computer Name' is set to MacServer","title":"Sharing"},{"location":"setup/macos-settings/#file-sharing","text":"Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups Enable Time Machine Backups: Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination Permissions: For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write","title":"File Sharing"},{"location":"setup/macos-settings/#remote-login","text":"[CHECK] Allow full disk access for remote users Allow access for: Only these users -> AllLocalUsers","title":"Remote Login"},{"location":"setup/macos-settings/#remote-management","text":"Allow access for: Only these users -> click '+' and add all users. When prompted for permissions, enable everything. Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen","title":"Remote Management"},{"location":"setup/macos-settings/#remote-apple-events","text":"Allow access for: All users","title":"Remote Apple Events"},{"location":"setup/macos-settings/#content-caching","text":"Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"Content Caching"},{"location":"setup/static-ips/","text":"Static IPs \u00b6 A static IP address assignment on your modem ensures that specific devices connected to your network always have the same IP address. A static IP is required for these devices: Device IP Address MacServer 192.168.1.100 Home Assistant 192.168.1.101 Pihole* 192.168.1.105 Phoscon 192.168.1.150 (* may need to be set locally on ubuntu server, depending on your router. See linuxconfig.org article for directions )","title":"Static IPs"},{"location":"setup/static-ips/#static-ips","text":"A static IP address assignment on your modem ensures that specific devices connected to your network always have the same IP address. A static IP is required for these devices: Device IP Address MacServer 192.168.1.100 Home Assistant 192.168.1.101 Pihole* 192.168.1.105 Phoscon 192.168.1.150 (* may need to be set locally on ubuntu server, depending on your router. See linuxconfig.org article for directions )","title":"Static IPs"},{"location":"troubleshooting/live-tv-data-issues/","text":"Live TV Guide Data not up to date \u00b6 Use Remote Desktop to connect to the computer: \u00b6 Open Apple Remote Desktop (ARD) Select \u2018MacServer\u2019 in the list Choose Interact -> Control Ensure that the Docker Container is healthy and running Open Docker Desktop Dashboard by cliching the whale/container ship icon in the taskbar and choosing 'Dashboard' Click on 'zap2xml' Ensure there are logs either being streamed: or you see the completed message: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds Restart the container If the container will not run, delete and recreate the Container per Live TV Configuration setup instructions If container is setup, running, and healthy: \u00b6 Open the file /Users/Shared/xmltvdata/xmltv.xml with a text editor (preferrably Atom or Visual Studio Code) and see if the file has up to date data. Find the start of the <programme></programme> block (around line 500), and see that it has data similar to <programme start= \"YYYYMMDD090000 +0000\" stop= \"YYYYMMDD100000 +0000\" channel= \"I2.1.21634.zap2it.com\" > Note the YYYMMDD in start= and stop= , these should be todays date (or very close to it) If the file does have up to date data but Jellyfin does not have updated data: Open Jellyfin Admin Dashboard (web console) -> Live TV and ensure file is listed under TV Guide Data Providers If the file is listed: Ensure that the Scheduled Task Live TV / Refresh Guide has run recently, and is scheduled to run every 12 hours","title":"Live TV Guide Data Issues"},{"location":"troubleshooting/live-tv-data-issues/#live-tv-guide-data-not-up-to-date","text":"","title":"Live TV Guide Data not up to date"},{"location":"troubleshooting/live-tv-data-issues/#use-remote-desktop-to-connect-to-the-computer","text":"Open Apple Remote Desktop (ARD) Select \u2018MacServer\u2019 in the list Choose Interact -> Control Ensure that the Docker Container is healthy and running Open Docker Desktop Dashboard by cliching the whale/container ship icon in the taskbar and choosing 'Dashboard' Click on 'zap2xml' Ensure there are logs either being streamed: or you see the completed message: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds Restart the container If the container will not run, delete and recreate the Container per Live TV Configuration setup instructions","title":"Use Remote Desktop to connect to the computer:"},{"location":"troubleshooting/live-tv-data-issues/#if-container-is-setup-running-and-healthy","text":"Open the file /Users/Shared/xmltvdata/xmltv.xml with a text editor (preferrably Atom or Visual Studio Code) and see if the file has up to date data. Find the start of the <programme></programme> block (around line 500), and see that it has data similar to <programme start= \"YYYYMMDD090000 +0000\" stop= \"YYYYMMDD100000 +0000\" channel= \"I2.1.21634.zap2it.com\" > Note the YYYMMDD in start= and stop= , these should be todays date (or very close to it) If the file does have up to date data but Jellyfin does not have updated data: Open Jellyfin Admin Dashboard (web console) -> Live TV and ensure file is listed under TV Guide Data Providers If the file is listed: Ensure that the Scheduled Task Live TV / Refresh Guide has run recently, and is scheduled to run every 12 hours","title":"If container is setup, running, and healthy:"},{"location":"troubleshooting/network-change-smart-home/","text":"Network Change: Smart Home Devices \u00b6 Info When the network is changed, some devices aren't smart enough to automatically reconnect to the new network. To fix this, the devices need to be re-connected to the network. Smart Plugs/Garage Door \u00b6 Verify that accessories are offline. These devices should be blinking blue or red, and show offline in the Smart Life app Press and hold the button till the device blinks quickly. Wait a few seconds after blinking quickly, then press and hold the button till it blinks slowly. (AP Mode) Follow the instructions in Smart Life app to add a new device. Ensure that HomeBridge can control the newly added accessory. This may require removing cached accessories (three dots -> Homebridge Settings -> Remove All Cached Accessories) Cameras/Wyze Hub \u00b6 Verify that cameras are offline. The cameras should be blinking blue and red, the hub should be quickly blinking blue, and show offline in the Wyze app Follow instructions to add new camera/hub in Wyze app The devices should respect their IP address reservations. Double check the IP of the device. If there are connection issues, temporarily disable 5GHz through the eero app (Settings -> Troubleshooting -> My device won't connect)","title":"Network Change: Smart Home Devices"},{"location":"troubleshooting/network-change-smart-home/#network-change-smart-home-devices","text":"Info When the network is changed, some devices aren't smart enough to automatically reconnect to the new network. To fix this, the devices need to be re-connected to the network.","title":"Network Change: Smart Home Devices"},{"location":"troubleshooting/network-change-smart-home/#smart-plugsgarage-door","text":"Verify that accessories are offline. These devices should be blinking blue or red, and show offline in the Smart Life app Press and hold the button till the device blinks quickly. Wait a few seconds after blinking quickly, then press and hold the button till it blinks slowly. (AP Mode) Follow the instructions in Smart Life app to add a new device. Ensure that HomeBridge can control the newly added accessory. This may require removing cached accessories (three dots -> Homebridge Settings -> Remove All Cached Accessories)","title":"Smart Plugs/Garage Door"},{"location":"troubleshooting/network-change-smart-home/#cameraswyze-hub","text":"Verify that cameras are offline. The cameras should be blinking blue and red, the hub should be quickly blinking blue, and show offline in the Wyze app Follow instructions to add new camera/hub in Wyze app The devices should respect their IP address reservations. Double check the IP of the device. If there are connection issues, temporarily disable 5GHz through the eero app (Settings -> Troubleshooting -> My device won't connect)","title":"Cameras/Wyze Hub"},{"location":"troubleshooting/no-response-homekit/","text":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark in Apple Home \u00b6 This is usually caused by your device, not MacServer. Try rebooting your device. If it still shows an issue, check that HomeBridge (plugs, garage door) or Scrypted (camera) are online and aren\u2019t throwing any errors. If issues persist, Reboot MacServer","title":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark"},{"location":"troubleshooting/no-response-homekit/#smart-devices-showing-as-no-responseorange-exclamation-mark-in-apple-home","text":"This is usually caused by your device, not MacServer. Try rebooting your device. If it still shows an issue, check that HomeBridge (plugs, garage door) or Scrypted (camera) are online and aren\u2019t throwing any errors. If issues persist, Reboot MacServer","title":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark in Apple Home"},{"location":"troubleshooting/reboot/","text":"Reboot \u00b6 Info Most issues can be solved by rebooting the Mac. If configured correctly, the mac should auto-login and all services should auto-start upon boot. To reboot the machine, there are a couple different ways: Apple Remote Desktop (ARD) \u00b6 Open ARD Select \u2018MacServer\u2019 in the list Choose Manage -> Restart Select \u2018Users lose unsaved changes\u2019 Click Restart After the Mac has restarted, \u2018Current Status\u2019 should change to \u2018Available\u2019. Verify that the Mac has all services back up and running -- they should all start automatically after a reboot SSH \u00b6 Use Terminal on a Mac, or \u201cTermius\u201d iOS app Connect to MacServer over ssh: In a terminal: ssh macmini@macserver.local You may recieve a message similar to The authenticity of host 'macserver.local (192.168.0.2)' can't be established. ED25519 key fingerprint is SHA256:f5c24jmfOO7dvFsdfsdf33SDFyzV1paytRg. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? This is likely because you have not connected to MacServer using SSH previously, and your computer cannot verify the authenticity of the server computer. Verify the IP address is what you expect (in this example, 192.168.0.2 ) and if it\u2019s correct, type yes at the prompt. After you have sone this once, you likely will not have ot do it again, unless the fingerprint key changes. At prompt: (macmini@macserver.local) Password: enter MacMini user password (no characters will be shown when typed) Connection success if prompt changes to macserver:~ macmini$ Enter sudo shutdown -r now at the prompt Enter macmini user password Final shutdown message will be shown: Shutdown NOW! *** FINAL System shutdown message from macmini@macserver.local *** System going down IMMEDIATELY System shutdown time has arrived Connection to macserver.local closed by remote host. Connection to macserver.local closed. Connection should be closed automatically, verify that MacServer comes back up. Manual Restart \u00b6 While a software restart is preferred, you can also do a force-shutdown/reboot. Hold the power button down until the LED on the front of the Mac Mini turns off. Wait a few seconds, and then press the power button again.","title":"Reboot"},{"location":"troubleshooting/reboot/#reboot","text":"Info Most issues can be solved by rebooting the Mac. If configured correctly, the mac should auto-login and all services should auto-start upon boot. To reboot the machine, there are a couple different ways:","title":"Reboot"},{"location":"troubleshooting/reboot/#apple-remote-desktop-ard","text":"Open ARD Select \u2018MacServer\u2019 in the list Choose Manage -> Restart Select \u2018Users lose unsaved changes\u2019 Click Restart After the Mac has restarted, \u2018Current Status\u2019 should change to \u2018Available\u2019. Verify that the Mac has all services back up and running -- they should all start automatically after a reboot","title":"Apple Remote Desktop (ARD)"},{"location":"troubleshooting/reboot/#ssh","text":"Use Terminal on a Mac, or \u201cTermius\u201d iOS app Connect to MacServer over ssh: In a terminal: ssh macmini@macserver.local You may recieve a message similar to The authenticity of host 'macserver.local (192.168.0.2)' can't be established. ED25519 key fingerprint is SHA256:f5c24jmfOO7dvFsdfsdf33SDFyzV1paytRg. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? This is likely because you have not connected to MacServer using SSH previously, and your computer cannot verify the authenticity of the server computer. Verify the IP address is what you expect (in this example, 192.168.0.2 ) and if it\u2019s correct, type yes at the prompt. After you have sone this once, you likely will not have ot do it again, unless the fingerprint key changes. At prompt: (macmini@macserver.local) Password: enter MacMini user password (no characters will be shown when typed) Connection success if prompt changes to macserver:~ macmini$ Enter sudo shutdown -r now at the prompt Enter macmini user password Final shutdown message will be shown: Shutdown NOW! *** FINAL System shutdown message from macmini@macserver.local *** System going down IMMEDIATELY System shutdown time has arrived Connection to macserver.local closed by remote host. Connection to macserver.local closed. Connection should be closed automatically, verify that MacServer comes back up.","title":"SSH"},{"location":"troubleshooting/reboot/#manual-restart","text":"While a software restart is preferred, you can also do a force-shutdown/reboot. Hold the power button down until the LED on the front of the Mac Mini turns off. Wait a few seconds, and then press the power button again.","title":"Manual Restart"},{"location":"troubleshooting/ventura-update/","text":"macOS Ventura Update: Issues and Solutions \u00b6 Info macOS Ventura is Apple's latest macOS Operating System. This page details issues encountered, and how to solve them Scheduled Reboot \u00b6 In macOS Ventura, the way you schedule your Mac to shut down or reboot has changed. In previous versions of macOS, setting an automated schedule like this was easy. You simply had to navigate to the Energy Saver/Battery panel in System Preferences and set a custom schedule using the interface options. For \u200cmacOS Ventura\u200c, however, in replacing System Preferences with System Settings, Apple decided to remove these options from the graphical interface completely. How to schedule a reboot on Monday at 4 AM: Open Terminal Run command: sudo pmset repeat restart M 04:00:00 Enter password if requested Verify schedule by running command: pmset -g sched Verify results: macmini@Andrews-MacServer ~ % pmset -g sched Repeating power events: restart at 4:00AM Monday To clear the current Power Management schedule, run command: sudo pmset repeat cancel Reference: How to Schedule Shut Down, Restart, and Boot/Wake in macOS Ventura: MacRumors Virtualbox Aborted with Exit Code 1 \u00b6 Error Text: Failed to open a session for the virtual machine PiHole. The virtual machine 'PiHole' has terminated unexpectedly during startup with exit code 1 (0x1). Result Code: NS_ERROR_FAILURE (0x80004005) Component: MachineWrap Solution 1: VirtualBox 7 was recently released (Oct 10, updated Oct 20), which is MUCH better than version 6 Download latest version from https://www.virtualbox.org/wiki/Downloads Use the uninstaller first, then install version 7. The PiHole VM may need to be re-added. Attempt to re-add. If issues persist, try solution 2. Solution 2: Open Terminal Enter commands: sudo su csrutil clear reboot Verify if the issue persists by attempting to re-start the VM in headless mode. If it does not, stop troubleshooting. Otherwise, continue. Download the latest release from https://www.virtualbox.org/wiki/Downloads and use VirtualBox_Uninstall.tool to un-install VirtualBox Reboot Re-install Virtualbox using the downloaded installer. If prompted, go to System Preferences - Privacy - General and accept the extensions If the PiHole VM is no longer listed in VirtualBox, re-add PiHole Virtual Machine PiHole.vbox file using the 'Add' button in VirtualBox Reboot Reference: Apple Stack Exchange Full Disk Access/Privacy/Other Permissions \u00b6 macOS Ventura seems to use a different scheme for Privacy, and some apps may not be updated for it. If required, remove permissions that are requested. If issues persist, uninstall and reinstall the app.","title":"Ventura Update: Issues and Solutions"},{"location":"troubleshooting/ventura-update/#macos-ventura-update-issues-and-solutions","text":"Info macOS Ventura is Apple's latest macOS Operating System. This page details issues encountered, and how to solve them","title":"macOS Ventura Update: Issues and Solutions"},{"location":"troubleshooting/ventura-update/#scheduled-reboot","text":"In macOS Ventura, the way you schedule your Mac to shut down or reboot has changed. In previous versions of macOS, setting an automated schedule like this was easy. You simply had to navigate to the Energy Saver/Battery panel in System Preferences and set a custom schedule using the interface options. For \u200cmacOS Ventura\u200c, however, in replacing System Preferences with System Settings, Apple decided to remove these options from the graphical interface completely. How to schedule a reboot on Monday at 4 AM: Open Terminal Run command: sudo pmset repeat restart M 04:00:00 Enter password if requested Verify schedule by running command: pmset -g sched Verify results: macmini@Andrews-MacServer ~ % pmset -g sched Repeating power events: restart at 4:00AM Monday To clear the current Power Management schedule, run command: sudo pmset repeat cancel Reference: How to Schedule Shut Down, Restart, and Boot/Wake in macOS Ventura: MacRumors","title":"Scheduled Reboot"},{"location":"troubleshooting/ventura-update/#virtualbox-aborted-with-exit-code-1","text":"Error Text: Failed to open a session for the virtual machine PiHole. The virtual machine 'PiHole' has terminated unexpectedly during startup with exit code 1 (0x1). Result Code: NS_ERROR_FAILURE (0x80004005) Component: MachineWrap Solution 1: VirtualBox 7 was recently released (Oct 10, updated Oct 20), which is MUCH better than version 6 Download latest version from https://www.virtualbox.org/wiki/Downloads Use the uninstaller first, then install version 7. The PiHole VM may need to be re-added. Attempt to re-add. If issues persist, try solution 2. Solution 2: Open Terminal Enter commands: sudo su csrutil clear reboot Verify if the issue persists by attempting to re-start the VM in headless mode. If it does not, stop troubleshooting. Otherwise, continue. Download the latest release from https://www.virtualbox.org/wiki/Downloads and use VirtualBox_Uninstall.tool to un-install VirtualBox Reboot Re-install Virtualbox using the downloaded installer. If prompted, go to System Preferences - Privacy - General and accept the extensions If the PiHole VM is no longer listed in VirtualBox, re-add PiHole Virtual Machine PiHole.vbox file using the 'Add' button in VirtualBox Reboot Reference: Apple Stack Exchange","title":"Virtualbox Aborted with Exit Code 1"},{"location":"troubleshooting/ventura-update/#full-disk-accessprivacyother-permissions","text":"macOS Ventura seems to use a different scheme for Privacy, and some apps may not be updated for it. If required, remove permissions that are requested. If issues persist, uninstall and reinstall the app.","title":"Full Disk Access/Privacy/Other Permissions"},{"location":"usage/garagedoor-notifications/","text":"iOS Garage Door Notifications \u00b6 By default, iOS sends notifications anytime the garage door is opened or closed. You can modify this to send notifications only when you are at home, or only when you are away, etc. Click on the notification or open the Home App Long press on 'Garage Door' and choose 'Accessory Settings' Scroll to 'Status and Notifications' Modify settings as needed '' ''","title":"Garage Door"},{"location":"usage/garagedoor-notifications/#ios-garage-door-notifications","text":"By default, iOS sends notifications anytime the garage door is opened or closed. You can modify this to send notifications only when you are at home, or only when you are away, etc. Click on the notification or open the Home App Long press on 'Garage Door' and choose 'Accessory Settings' Scroll to 'Status and Notifications' Modify settings as needed '' ''","title":"iOS Garage Door Notifications"},{"location":"usage/wyze-ha/","text":"Getting Wyze Camera into Home Assistant \u00b6 Warning Virtualbox is required to run Home Assistant. The latest version of Virtualbox has a bug when running on macOS 13.3. This bug prevents the Home Assistant VM from booting entirely. A fix is hopefully in the next version. See forum post here: https://forums.virtualbox.org/viewtopic.php?f=8&t=109003 Prerequisites \u00b6 Virtualbox https://www.virtualbox.org/wiki/Downloads Latest validated version: VirtualBox-7.0.10a Download \u00b6 Download the latest VDI from home-assistant.io/installation/macos Latest validated version: haos_ova-10.4.vdi Install \u00b6","title":"Wyze Home Assistant camera"},{"location":"usage/wyze-ha/#getting-wyze-camera-into-home-assistant","text":"Warning Virtualbox is required to run Home Assistant. The latest version of Virtualbox has a bug when running on macOS 13.3. This bug prevents the Home Assistant VM from booting entirely. A fix is hopefully in the next version. See forum post here: https://forums.virtualbox.org/viewtopic.php?f=8&t=109003","title":"Getting Wyze Camera into Home Assistant"},{"location":"usage/wyze-ha/#prerequisites","text":"Virtualbox https://www.virtualbox.org/wiki/Downloads Latest validated version: VirtualBox-7.0.10a","title":"Prerequisites"},{"location":"usage/wyze-ha/#download","text":"Download the latest VDI from home-assistant.io/installation/macos Latest validated version: haos_ova-10.4.vdi","title":"Download"},{"location":"usage/wyze-ha/#install","text":"","title":"Install"}]}