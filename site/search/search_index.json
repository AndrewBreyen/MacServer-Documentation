{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MacServer Documentation This wiki contains documentation on how MacServer is set up and used.","title":"Home"},{"location":"#welcome-to-macserver-documentation","text":"This wiki contains documentation on how MacServer is set up and used.","title":"Welcome to MacServer Documentation"},{"location":"first-time-setup/first-time-setup/","text":"First Time Setup Users When first setting up the Mac, create a generic \u201cMacMini\u201d (or whatever type of Mac) admin user. This user will be logged in and serving apps/content. Other users will be created later, but just create this user for now. Network The Mac needs to have a Static IP address. Find the Ethernet Mac Address under Apple Menu (hold OPTION) -> System Information -> Network In modem settings (192.168.0.1) -> Advanced Setup -> DHCP Reservation, enter (or choose) the MAC address and set a static IP (192.168.0.2) In System Preferences -> Network -> Ethernet -> Advanced change \u2018Configure IPv4\u2019 to Using DHCP with manual address. Enter 192.168.0.2 for IP address Reboot mac, and ensure that IP address listed in System Preferences is 192.168.0.2","title":"First Time Setup"},{"location":"first-time-setup/first-time-setup/#first-time-setup","text":"","title":"First Time Setup"},{"location":"first-time-setup/first-time-setup/#users","text":"When first setting up the Mac, create a generic \u201cMacMini\u201d (or whatever type of Mac) admin user. This user will be logged in and serving apps/content. Other users will be created later, but just create this user for now.","title":"Users"},{"location":"first-time-setup/first-time-setup/#network","text":"The Mac needs to have a Static IP address. Find the Ethernet Mac Address under Apple Menu (hold OPTION) -> System Information -> Network In modem settings (192.168.0.1) -> Advanced Setup -> DHCP Reservation, enter (or choose) the MAC address and set a static IP (192.168.0.2) In System Preferences -> Network -> Ethernet -> Advanced change \u2018Configure IPv4\u2019 to Using DHCP with manual address. Enter 192.168.0.2 for IP address Reboot mac, and ensure that IP address listed in System Preferences is 192.168.0.2","title":"Network"},{"location":"first-time-setup/macos-settings/","text":"macOS Settings Automatic Login Enable automatic login for the MacMini user: System Preferences -> Users and Groups -> Login Options Automatic Login: macmini Auto Start Apps Automatically start apps on MacMini user login System Preferences -> Users and Groups -> macmini -> Login Items Docker Jellyfin Energy Saver: Turn Display Off after: never [CHECK] Prevent your Mac from automatically sleeping when the display is off [CHECK] Put hard disks to sleep when possible [CHECK] Wake for network access [CHECK] Start up automatically after a power failure [CHECK] Enable Power Nap Full Disk Access: Ensure /bin/bash has full disk access in System Preferences -> Security and Privacy -> Privacy System Preferences -> Sharing File Sharing Ensure 'Computer Name' is set to MacServer Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups Enable Time Machine Backups: Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination Permissions: For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write Remote Login [CHECK] Allow full disk access for remote users Allow access for: All users Remote Management Allow access for: All users Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen Remote Apple Events Allow access for: All users Content Caching Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"macOS Settings"},{"location":"first-time-setup/macos-settings/#macos-settings","text":"","title":"macOS Settings"},{"location":"first-time-setup/macos-settings/#automatic-login","text":"Enable automatic login for the MacMini user: System Preferences -> Users and Groups -> Login Options Automatic Login: macmini","title":"Automatic Login"},{"location":"first-time-setup/macos-settings/#auto-start-apps","text":"Automatically start apps on MacMini user login System Preferences -> Users and Groups -> macmini -> Login Items Docker Jellyfin","title":"Auto Start Apps"},{"location":"first-time-setup/macos-settings/#energy-saver","text":"Turn Display Off after: never [CHECK] Prevent your Mac from automatically sleeping when the display is off [CHECK] Put hard disks to sleep when possible [CHECK] Wake for network access [CHECK] Start up automatically after a power failure [CHECK] Enable Power Nap","title":"Energy Saver:"},{"location":"first-time-setup/macos-settings/#full-disk-access","text":"Ensure /bin/bash has full disk access in System Preferences -> Security and Privacy -> Privacy","title":"Full Disk Access:"},{"location":"first-time-setup/macos-settings/#system-preferences-sharing","text":"","title":"System Preferences -&gt; Sharing"},{"location":"first-time-setup/macos-settings/#file-sharing","text":"Ensure 'Computer Name' is set to MacServer Add folders: /Users/Shared/macOS Server Shares/AllShare \u200b/Users/Shared/macOS Server Shares/Scans Add volumes: /Volumes/Media /Volumes/Time Machine Backups","title":"File Sharing"},{"location":"first-time-setup/macos-settings/#enable-time-machine-backups","text":"Right Click Time Machine Backups -> Advanced Options -> [CHECK] Share as a Time Machine backup destination","title":"Enable Time Machine Backups:"},{"location":"first-time-setup/macos-settings/#permissions","text":"For all folders and volumes: \u2018Everyone\u2019: Read Only 'AllLocalUsers': Read & Write","title":"Permissions:"},{"location":"first-time-setup/macos-settings/#remote-login","text":"[CHECK] Allow full disk access for remote users Allow access for: All users","title":"Remote Login"},{"location":"first-time-setup/macos-settings/#remote-management","text":"Allow access for: All users Computer Settings: [CHECK] Always show Remote Management status in menu bar [CHECK] Anyone may request permission to control screen","title":"Remote Management"},{"location":"first-time-setup/macos-settings/#remote-apple-events","text":"Allow access for: All users","title":"Remote Apple Events"},{"location":"first-time-setup/macos-settings/#content-caching","text":"Cache: All content Options Cache Location: Macintosh HD Cache size: 30 GB (change as needed)","title":"Content Caching"},{"location":"server-apps/homebridge/","text":"Homebridge Homebridge is used for Home Controls of Plugs, Garage Door. Install locally https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-macOS Install plugins Homebridge Tuya Platform https://github.com/tuya/tuya-homebridge Configure Homebridge Tuya Platform plugin Name: TuyaPlatform Username: andrew.breyen@gmail.com Password: [encrypted-value] Access ID: [encrypted-value] Access Key: [encrypted-value] Language Code: en Project Type: PaaS PaaS Platform: Smart Life Country Code: 1 Setup and Configure Once the Homebridge Tuya Platform plugin is added, click the power icon on the top right to restart Once back up, click Accessories and verify that all accessories have been added Scan QR code from Status screen using Home App -> Add Accessories Add the bridge to room ZAccessories , continue setup within Home app, place accessories into correct rooms","title":"Homebridge"},{"location":"server-apps/homebridge/#homebridge","text":"Homebridge is used for Home Controls of Plugs, Garage Door.","title":"Homebridge"},{"location":"server-apps/homebridge/#install-locally","text":"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-macOS","title":"Install locally"},{"location":"server-apps/homebridge/#install-plugins","text":"Homebridge Tuya Platform https://github.com/tuya/tuya-homebridge","title":"Install plugins"},{"location":"server-apps/homebridge/#configure-homebridge-tuya-platform-plugin","text":"Name: TuyaPlatform Username: andrew.breyen@gmail.com Password: [encrypted-value] Access ID: [encrypted-value] Access Key: [encrypted-value] Language Code: en Project Type: PaaS PaaS Platform: Smart Life Country Code: 1","title":"Configure Homebridge Tuya Platform plugin"},{"location":"server-apps/homebridge/#setup-and-configure","text":"Once the Homebridge Tuya Platform plugin is added, click the power icon on the top right to restart Once back up, click Accessories and verify that all accessories have been added Scan QR code from Status screen using Home App -> Add Accessories Add the bridge to room ZAccessories , continue setup within Home app, place accessories into correct rooms","title":"Setup and Configure"},{"location":"server-apps/jellyfin/","text":"Jellyfin Jellyfin is used to serve media content, manage and record live TV content, and more. Install Jellyfin locally: https://repo.jellyfin.org/releases/server/macos/stable/ Configure Libraries WIP Live TV Configuration Ensure HDHomeRun has a static IP address: Find HDHomeRun MAC address at http://hdhomerun.local/system.html In modem settings -> Advanced Setup -> DHCP Reservation: Enter (or choose) the MAC address and set a static IP (whatever IP was already set on the HDHR system menu web page) Setup Live TV according to Jellyfin documentation https://jellyfin.org/docs/general/server/live-tv/setup-guide.html Add Guide Data: Install Docker Desktop Create a Docker container for the Zap2XML Docker Container Create a folder on the Mac: /Users/Shared/xmltvdata Open Docker Desktop app In Docker Desktop: Settings -> Resources -> File Sharing add the /Users/Shared/xmltvdata folder created in step 1 Run terminal command: replace your_zap2it_email@email.com and your_zap2it_password with your https://tvlistings.zap2it.com/ account details. docker run \"-d --name zap2xml -v /xmltvdata:/data -e USERNAME=your_zap2it_email@email.com -e PASSWORD=your_zap2it_password -e OPT_ARGS=\"-I -D -Z 55303\" -e XMLTV_FILENAME=xmltv.xml shuaiscott/zap2xml\" By default, new guide data will be fetched by this Docker container every 12 hours. Additional command line arguments can be added/changed. See details on GitHub - shuaiscott/zap2xml README. Open Docker Desktop and view logs, let it run. When complete, a status message will print like this: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds In macOS Finder, verify that a xmltv.xml file was created at location /Users/Shared/xmltvdata . File should start with something like: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE tv SYSTEM \"xmltv.dtd\"> <tv source-info-url=\"http://tvlistings.zap2it.com/\" source-info-name=\"zap2it.com\" generator-info-name=\"zap2xml\" generator-info-url=\"zap2xml@gmail.com\"> <channel id=\"I2.1.21634.zap2it.com\"> <display-name>2.1 KTCADT</display-name> <display-name>2.1</display-name> <display-name>KTCADT</display-name> <icon src=\"https://zap2it.tmsimg.com/h3/NowShowing/21634/s32356_h3_aa.png\" /> Scroll down past the <channel></channel> sections, and verify that there are </programme></programme> tags, with contents similar to <programme start=\"20220311023000 +0000\" stop=\"20220311040000 +0000\" channel=\"I2.1.21634.zap2it.com\"> <title lang=\"en\">Endeavour: The Evolution</title> <desc lang=\"en\">A look at how \u2026..</desc> <category lang=\"en\">Documentary</category> <category lang=\"en\">Special</category> <length units=\"minutes\">90</length> <icon src=\"https://zap2it.tmsimg.com/assets/p21373423_b_v13_aa.jpg\" /> <url>https://tvlistings.zap2it.com//overview.html?programSeriesId=SH04161006&amp;tmsId=SH041610060000</url> <episode-num system=\"dd_progid\">SH04161006.0000</episode-num> <previously-shown /> <subtitles type=\"teletext\" /> </programme> Once the file looks correct, it can be added into Jellyfin. See details on Setup Guide | Documentation - Jellyfin Project","title":"Jellyfin"},{"location":"server-apps/jellyfin/#jellyfin","text":"Jellyfin is used to serve media content, manage and record live TV content, and more. Install Jellyfin locally: https://repo.jellyfin.org/releases/server/macos/stable/","title":"Jellyfin"},{"location":"server-apps/jellyfin/#configure-libraries","text":"WIP","title":"Configure Libraries"},{"location":"server-apps/jellyfin/#live-tv-configuration","text":"Ensure HDHomeRun has a static IP address: Find HDHomeRun MAC address at http://hdhomerun.local/system.html In modem settings -> Advanced Setup -> DHCP Reservation: Enter (or choose) the MAC address and set a static IP (whatever IP was already set on the HDHR system menu web page)","title":"Live TV Configuration"},{"location":"server-apps/jellyfin/#setup-live-tv-according-to-jellyfin-documentation","text":"https://jellyfin.org/docs/general/server/live-tv/setup-guide.html","title":"Setup Live TV according to Jellyfin documentation"},{"location":"server-apps/jellyfin/#add-guide-data","text":"Install Docker Desktop Create a Docker container for the Zap2XML Docker Container Create a folder on the Mac: /Users/Shared/xmltvdata Open Docker Desktop app In Docker Desktop: Settings -> Resources -> File Sharing add the /Users/Shared/xmltvdata folder created in step 1 Run terminal command: replace your_zap2it_email@email.com and your_zap2it_password with your https://tvlistings.zap2it.com/ account details. docker run \"-d --name zap2xml -v /xmltvdata:/data -e USERNAME=your_zap2it_email@email.com -e PASSWORD=your_zap2it_password -e OPT_ARGS=\"-I -D -Z 55303\" -e XMLTV_FILENAME=xmltv.xml shuaiscott/zap2xml\" By default, new guide data will be fetched by this Docker container every 12 hours. Additional command line arguments can be added/changed. See details on GitHub - shuaiscott/zap2xml README. Open Docker Desktop and view logs, let it run. When complete, a status message will print like this: Downloaded 1090062 bytes in 291 http requests using 2 sockets. Writing XML file: /data/xmltv.xml Completed in 167s (Parse: 164s) 81 stations, 7895 programs, 17063 scheduled. Last run time: Fri Mar 11 04:12:49 UTC 2022 Will run in 43200 seconds In macOS Finder, verify that a xmltv.xml file was created at location /Users/Shared/xmltvdata . File should start with something like: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE tv SYSTEM \"xmltv.dtd\"> <tv source-info-url=\"http://tvlistings.zap2it.com/\" source-info-name=\"zap2it.com\" generator-info-name=\"zap2xml\" generator-info-url=\"zap2xml@gmail.com\"> <channel id=\"I2.1.21634.zap2it.com\"> <display-name>2.1 KTCADT</display-name> <display-name>2.1</display-name> <display-name>KTCADT</display-name> <icon src=\"https://zap2it.tmsimg.com/h3/NowShowing/21634/s32356_h3_aa.png\" /> Scroll down past the <channel></channel> sections, and verify that there are </programme></programme> tags, with contents similar to <programme start=\"20220311023000 +0000\" stop=\"20220311040000 +0000\" channel=\"I2.1.21634.zap2it.com\"> <title lang=\"en\">Endeavour: The Evolution</title> <desc lang=\"en\">A look at how \u2026..</desc> <category lang=\"en\">Documentary</category> <category lang=\"en\">Special</category> <length units=\"minutes\">90</length> <icon src=\"https://zap2it.tmsimg.com/assets/p21373423_b_v13_aa.jpg\" /> <url>https://tvlistings.zap2it.com//overview.html?programSeriesId=SH04161006&amp;tmsId=SH041610060000</url> <episode-num system=\"dd_progid\">SH04161006.0000</episode-num> <previously-shown /> <subtitles type=\"teletext\" /> </programme> Once the file looks correct, it can be added into Jellyfin. See details on Setup Guide | Documentation - Jellyfin Project","title":"Add Guide Data:"},{"location":"server-apps/macos-server/","text":"macOS Server Download macOS Server from the App Store Users Create users within macOS Server app for Dan/Nancy/Matt/Andrew Groups Create a User Group AllLocalUsers with all local users","title":"macOS Server"},{"location":"server-apps/macos-server/#macos-server","text":"Download macOS Server from the App Store","title":"macOS Server"},{"location":"server-apps/macos-server/#users","text":"Create users within macOS Server app for Dan/Nancy/Matt/Andrew","title":"Users"},{"location":"server-apps/macos-server/#groups","text":"Create a User Group AllLocalUsers with all local users","title":"Groups"},{"location":"server-apps/node-red/","text":"Node-RED Node-RED is used to control automations that require more settings/control than HomeKit or HomeBridge can provide natively. \" Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.\" Installation Install Node-RED locally using directions provided here: https://nodered.org/docs/getting-started/local Additional Palette items Once Node-RED is running and you can access via a web browser, install these additional items by clicking the three lines hamburger button in the top right, and selecting \u2018Manage Palette\u2019, then move to the \u2018Install\u2019 tab node-red node-red-contrib-cron node-red-contrib-homebridge-automation node-red-contrib-slack-files node-red-contrib-stoptimer Enabling Node-RED to start on computer boot Follow directions here to use pm2 to have Node-RED start on boot: https://nodered.org/docs/faq/starting-node-red-on-boot Importing Flows Go to https://github.com/AndrewBreyen/Node-RED-flows/ and pick which flow you want to start importing Copy the contents of desired flows\u2019 (use the button for ease of use) Click the three lines hamburger button in the top right, and selecting \u2018Import\u2019 Paste in value copied to clipboard Go to https://api.slack.com/apps/A03JPNEBPC4/incoming-webhooks to retrieve the Webhook URL, copy to clipboard Double click on the node(s) Paste in the Webhook URL copied to clipboard Double click on the and nodes, ensure that the correct device and Homebridge Pin are selected Repeat with the other flows you want to import Test it out!","title":"Node-RED"},{"location":"server-apps/node-red/#node-red","text":"Node-RED is used to control automations that require more settings/control than HomeKit or HomeBridge can provide natively. \" Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways. It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.\"","title":"Node-RED"},{"location":"server-apps/node-red/#installation","text":"Install Node-RED locally using directions provided here: https://nodered.org/docs/getting-started/local","title":"Installation"},{"location":"server-apps/node-red/#additional-palette-items","text":"Once Node-RED is running and you can access via a web browser, install these additional items by clicking the three lines hamburger button in the top right, and selecting \u2018Manage Palette\u2019, then move to the \u2018Install\u2019 tab node-red node-red-contrib-cron node-red-contrib-homebridge-automation node-red-contrib-slack-files node-red-contrib-stoptimer","title":"Additional Palette items"},{"location":"server-apps/node-red/#enabling-node-red-to-start-on-computer-boot","text":"Follow directions here to use pm2 to have Node-RED start on boot: https://nodered.org/docs/faq/starting-node-red-on-boot","title":"Enabling Node-RED to start on computer boot"},{"location":"server-apps/node-red/#importing-flows","text":"Go to https://github.com/AndrewBreyen/Node-RED-flows/ and pick which flow you want to start importing Copy the contents of desired flows\u2019 (use the button for ease of use) Click the three lines hamburger button in the top right, and selecting \u2018Import\u2019 Paste in value copied to clipboard Go to https://api.slack.com/apps/A03JPNEBPC4/incoming-webhooks to retrieve the Webhook URL, copy to clipboard Double click on the node(s) Paste in the Webhook URL copied to clipboard Double click on the and nodes, ensure that the correct device and Homebridge Pin are selected Repeat with the other flows you want to import Test it out!","title":"Importing Flows"},{"location":"server-apps/pihole/","text":"Pihole Pihole is used as a network wide Ad blocker using DNS. Setup Create a Virtualbox VM (these are purposefully low-powered settings, it\u2019s designed for a Raspberry Pi, so a powerful VM is not needed) 1 GB memory 10 GB storage bridged network 50% CPU Execution cap Add ISO as a boot medium Download ISO of LTS edition from https://ubuntu.com/download/server Settings of VM -> Storage Controller: IDE -> Empty Click the circle CD icon and pick \u2018choose a disk file\u2026\u2019 Pick the downloaded ISO Click OK Start VM in headless mode (click arrow next to start -> headless mode) Install Ubuntu Server with default settings, pihole user, password pihole When asked for the network settings, take note of the MAC address and add a IP reservation to modem settings After applying assigned IP, reset the VM and restart setup. This will force the VM to get a static IP. If this doesn't work, continue with setup, and do \u201cconfigure a static IP for VM'' setup below Configure a Static IP for the VM Set static IP on Modem via MAC address (MAC address listed under $[ip addr] ) RUN in terminal of PiHole VM: sudo nano /etc/netplan/00-installer-config.yaml Copy these contents into the file that is generated, change IP address as needed # This is the network config written by 'subiquity' network: version: 2 ethernets: enp0s3: addresses: - **IP ADDRESS SET ON MODEM**/24 gateway4: 10.0.1.1 nameservers: addresses: - 10.0.1.53 - 8.8.4.4 sudo netplan generate sudo netplan apply reboot Install PiHole Follow directions from https://github.com/pi-hole/pi-hole/#curl--ssl-httpsinstallpi-holenet--bash Set DHCP Server Set the IP address of the VM as the DHCP server in: modem settings 192.168.0.1 -> Advanced Setup -> DHCP Settings -> Set the DNS servers allocated with DHCP requests. -> Custom Servers -> enter VM ip address as server 1, and Open DNS backup server (8.8.4.4) as server 2 Set the VM to auto-login https://askubuntu.com/a/819154 RUN in terminal of PiHole VM: sudo systemctl edit getty@tty1.service Edit the file that is generated with these contents, change username to username of VM user ( pihole in this case): [Service] ExecStart= ExecStart=-/sbin/agetty --noissue --autologin pihole %I $TERM Type=idle Save with CTRL + X Reboot machine and see if it auto-logs in as Pihole user Set the VM to auto-launch in headless mode on Mac login Download the script vboxlaunchagent.sh from https://www.whatroute.net/software/vboxlaunchagent.sh.zip Directions from this website: LaunchAgents are configured with an Apple plist XML file installed in the users Library/LaunchAgents folder. When the user logs in to their account on the Mac, launchd will inspect these plist files and invoke the required program with specified arguments. It can get a bit tricky to create a plist manually. They have very fussy and very unforgiving syntax requirements. This shell script will create the plist and install it in the LaunchAgents directory. You can download the script from vboxlaunchagent.sh. Unzip the file and copy the script to a suitable directory on your machine. Run the script using this syntax: Find the name of the VM: In a terminal on macOS, run: VBoxManage list vms Should result in output similar to: macmini@macserver ~ % VBoxManage list vms \"Pihole\" {c7ac734f-3fc7-4645-997b-3c78ef32d8f4} In this example, Pihole is the name of the VM. In a terminal, run sh vboxlaunchagent.sh --headless --verbose \"VMName\" , replacing \u2018VMName\u2019 with the name of the VM from the previous step Reboot the Mac and ensure the VM auto-starts on login Troubleshooting Sites not Loading Pihole is a tracking and ad-blocker. Because of this, some sites may not load, or be missing content. Updating Pihole If you see red text at the bottom of the PiHole web UI \u2018Update Available\u2019, it needs an update. This is currently a manual process, work in progress to automate it. There are two options, both do exactly the same thing. The SSH option may be easier. Via SSH: Open a Terminal and enter command: ssh pihole@pi.hole If you get a message similar to: The authenticity of host 'pi.hole (192.168.0.4)' can't be established. ED25519 key fingerprint is SHA256:jWxxjslC9ObhMty4d0UNERghKP6UWmetfEj80CKW6QY. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:8: 192.168.0.4 Are you sure you want to continue connecting (yes/no/[fingerprint])? this is likely because you have not connected to the PiHole VM using SSH previously. Verify the IP address is 192.168.0.4 and if it\u2019s correct, type \u2018yes\u2019 at the prompt. At the prompt pihole@pi.hole's password: enter the PiHole user password. Once successfully connected, you should see a prompt similar to pihole@pihole:~$ . You are now SSHed into the PiHole VM! Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used.` Do you want to continue? [Y/n] Enter \u2018y\u2019 Wait for it to update. This may take a while, depending on the number of updates. Via Apple Remote Desktop Open Apple Remote Desktop Select MacServer from All Computers Click on Control or from the taskbar, or choose Interact > Control A new window will open with the MacServer display. From the Dock, Applications Folder or Spotlight, open VirtualBox Ensure Pihole is selected in the sidebar Click Show A new window will open with the PiHole VM. In that new window, ensure you have a pihole@pihole:~$ prompt. If you do not, press enter a few times to get to a new line. Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used.` Do you want to continue? [Y/n] Enter \u2018y\u2019 Wait for it to update. This may take a while, depending on the number of updates.","title":"Pihole"},{"location":"server-apps/pihole/#pihole","text":"Pihole is used as a network wide Ad blocker using DNS.","title":"Pihole"},{"location":"server-apps/pihole/#setup","text":"","title":"Setup"},{"location":"server-apps/pihole/#create-a-virtualbox-vm","text":"(these are purposefully low-powered settings, it\u2019s designed for a Raspberry Pi, so a powerful VM is not needed) 1 GB memory 10 GB storage bridged network 50% CPU Execution cap","title":"Create a Virtualbox VM"},{"location":"server-apps/pihole/#add-iso-as-a-boot-medium","text":"Download ISO of LTS edition from https://ubuntu.com/download/server Settings of VM -> Storage Controller: IDE -> Empty Click the circle CD icon and pick \u2018choose a disk file\u2026\u2019 Pick the downloaded ISO Click OK Start VM in headless mode (click arrow next to start -> headless mode)","title":"Add ISO as a boot medium"},{"location":"server-apps/pihole/#install-ubuntu-server-with-default-settings-pihole-user-password-pihole","text":"When asked for the network settings, take note of the MAC address and add a IP reservation to modem settings After applying assigned IP, reset the VM and restart setup. This will force the VM to get a static IP. If this doesn't work, continue with setup, and do \u201cconfigure a static IP for VM'' setup below","title":"Install Ubuntu Server with default settings, pihole user, password pihole"},{"location":"server-apps/pihole/#configure-a-static-ip-for-the-vm","text":"Set static IP on Modem via MAC address (MAC address listed under $[ip addr] ) RUN in terminal of PiHole VM: sudo nano /etc/netplan/00-installer-config.yaml Copy these contents into the file that is generated, change IP address as needed # This is the network config written by 'subiquity' network: version: 2 ethernets: enp0s3: addresses: - **IP ADDRESS SET ON MODEM**/24 gateway4: 10.0.1.1 nameservers: addresses: - 10.0.1.53 - 8.8.4.4 sudo netplan generate sudo netplan apply reboot","title":"Configure a Static IP for the VM"},{"location":"server-apps/pihole/#install-pihole","text":"Follow directions from https://github.com/pi-hole/pi-hole/#curl--ssl-httpsinstallpi-holenet--bash","title":"Install PiHole"},{"location":"server-apps/pihole/#set-dhcp-server","text":"Set the IP address of the VM as the DHCP server in: modem settings 192.168.0.1 -> Advanced Setup -> DHCP Settings -> Set the DNS servers allocated with DHCP requests. -> Custom Servers -> enter VM ip address as server 1, and Open DNS backup server (8.8.4.4) as server 2","title":"Set DHCP Server"},{"location":"server-apps/pihole/#set-the-vm-to-auto-login","text":"https://askubuntu.com/a/819154 RUN in terminal of PiHole VM: sudo systemctl edit getty@tty1.service Edit the file that is generated with these contents, change username to username of VM user ( pihole in this case): [Service] ExecStart= ExecStart=-/sbin/agetty --noissue --autologin pihole %I $TERM Type=idle Save with CTRL + X Reboot machine and see if it auto-logs in as Pihole user","title":"Set the VM to auto-login"},{"location":"server-apps/pihole/#set-the-vm-to-auto-launch-in-headless-mode-on-mac-login","text":"Download the script vboxlaunchagent.sh from https://www.whatroute.net/software/vboxlaunchagent.sh.zip Directions from this website: LaunchAgents are configured with an Apple plist XML file installed in the users Library/LaunchAgents folder. When the user logs in to their account on the Mac, launchd will inspect these plist files and invoke the required program with specified arguments. It can get a bit tricky to create a plist manually. They have very fussy and very unforgiving syntax requirements. This shell script will create the plist and install it in the LaunchAgents directory. You can download the script from vboxlaunchagent.sh. Unzip the file and copy the script to a suitable directory on your machine. Run the script using this syntax: Find the name of the VM: In a terminal on macOS, run: VBoxManage list vms Should result in output similar to: macmini@macserver ~ % VBoxManage list vms \"Pihole\" {c7ac734f-3fc7-4645-997b-3c78ef32d8f4} In this example, Pihole is the name of the VM. In a terminal, run sh vboxlaunchagent.sh --headless --verbose \"VMName\" , replacing \u2018VMName\u2019 with the name of the VM from the previous step Reboot the Mac and ensure the VM auto-starts on login","title":"Set the VM to auto-launch in headless mode on Mac login"},{"location":"server-apps/pihole/#troubleshooting-sites-not-loading","text":"Pihole is a tracking and ad-blocker. Because of this, some sites may not load, or be missing content.","title":"Troubleshooting Sites not Loading"},{"location":"server-apps/pihole/#updating-pihole","text":"If you see red text at the bottom of the PiHole web UI \u2018Update Available\u2019, it needs an update. This is currently a manual process, work in progress to automate it. There are two options, both do exactly the same thing. The SSH option may be easier.","title":"Updating Pihole"},{"location":"server-apps/pihole/#via-ssh","text":"Open a Terminal and enter command: ssh pihole@pi.hole If you get a message similar to: The authenticity of host 'pi.hole (192.168.0.4)' can't be established. ED25519 key fingerprint is SHA256:jWxxjslC9ObhMty4d0UNERghKP6UWmetfEj80CKW6QY. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:8: 192.168.0.4 Are you sure you want to continue connecting (yes/no/[fingerprint])? this is likely because you have not connected to the PiHole VM using SSH previously. Verify the IP address is 192.168.0.4 and if it\u2019s correct, type \u2018yes\u2019 at the prompt. At the prompt pihole@pi.hole's password: enter the PiHole user password. Once successfully connected, you should see a prompt similar to pihole@pihole:~$ . You are now SSHed into the PiHole VM! Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used.` Do you want to continue? [Y/n] Enter \u2018y\u2019 Wait for it to update. This may take a while, depending on the number of updates.","title":"Via SSH:"},{"location":"server-apps/pihole/#via-apple-remote-desktop","text":"Open Apple Remote Desktop Select MacServer from All Computers Click on Control or from the taskbar, or choose Interact > Control A new window will open with the MacServer display. From the Dock, Applications Folder or Spotlight, open VirtualBox Ensure Pihole is selected in the sidebar Click Show A new window will open with the PiHole VM. In that new window, ensure you have a pihole@pihole:~$ prompt. If you do not, press enter a few times to get to a new line. Run command pihole -up If prompted [sudo] password for pihole: enter the PiHole user password Wait for it to update. On success, you should see [\u2713] Everything is up to date! It\u2019s also a good idea to update the underlying Ubuntu instance periodically, especially if there is a notice then you logged into the Pihole VM similar to: 91 updates can be applied immediately. 9 of these updates are standard security updates. To do this: Run sudo apt upgrade You may be prompted: After this operation, 430 MB of additional disk space will be used.` Do you want to continue? [Y/n] Enter \u2018y\u2019 Wait for it to update. This may take a while, depending on the number of updates.","title":"Via Apple Remote Desktop"},{"location":"server-apps/scrypted/","text":"Scrypted Scrypted is used to serve Video Camera Content to Apple Home. Install locally https://github.com/koush/scrypted/wiki/Installation:-Mac Install plugins HomeKit RTSP Camera Plugin Rebroadcast Plugin Configure plugins RTSP cameras Add 2 cameras (Front Porch, Backyard), username: wyzecam, Password: wyzecam, Snapshot URL: [blank], RTSP Stream URL: rtsp://wyzecam:wyzecam@[IP ADDR OF CAMERA]/live Homekit View console of plugin to see QR code, add accessory via iOS Home app. Add the bridge to room \u2018ZAccessories\u2019, continue setup within Home app, place accessories into correct rooms Additional plugins used by Scrypted OpenCV: https://opencv.org/ Used to detect motion and send homekit notifications","title":"Scrypted"},{"location":"server-apps/scrypted/#scrypted","text":"Scrypted is used to serve Video Camera Content to Apple Home.","title":"Scrypted"},{"location":"server-apps/scrypted/#install-locally","text":"https://github.com/koush/scrypted/wiki/Installation:-Mac","title":"Install locally"},{"location":"server-apps/scrypted/#install-plugins","text":"HomeKit RTSP Camera Plugin Rebroadcast Plugin","title":"Install plugins"},{"location":"server-apps/scrypted/#configure-plugins","text":"RTSP cameras Add 2 cameras (Front Porch, Backyard), username: wyzecam, Password: wyzecam, Snapshot URL: [blank], RTSP Stream URL: rtsp://wyzecam:wyzecam@[IP ADDR OF CAMERA]/live Homekit View console of plugin to see QR code, add accessory via iOS Home app. Add the bridge to room \u2018ZAccessories\u2019, continue setup within Home app, place accessories into correct rooms","title":"Configure plugins"},{"location":"server-apps/scrypted/#additional-plugins-used-by-scrypted","text":"OpenCV: https://opencv.org/ Used to detect motion and send homekit notifications","title":"Additional plugins used by Scrypted"},{"location":"server-apps/teamviewer/","text":"TeamViewer Teamviewer is used for Remote Desktop access to the computer off-network. Install TeamViewer from https://www.teamviewer.com/en-us/download/mac-os/ Login with account andrew.breyen@gmail.com Enable unattended access: [CHECK] Start TeamViewer with System [CHECK] Grant Andrew Breyen Easy Access","title":"TeamViewer"},{"location":"server-apps/teamviewer/#teamviewer","text":"Teamviewer is used for Remote Desktop access to the computer off-network. Install TeamViewer from https://www.teamviewer.com/en-us/download/mac-os/ Login with account andrew.breyen@gmail.com Enable unattended access: [CHECK] Start TeamViewer with System [CHECK] Grant Andrew Breyen Easy Access","title":"TeamViewer"},{"location":"troubleshooting/live-tv-data-issues/","text":"Live TV Guide Data not up to date Use Remote Desktop to connect to the computer: Ensure that the Docker Container is healthy and running Open Docker Desktop, restart the container If the container will not run, delete and recreate the Container per Live TV Configuration setup instructions If container is setup, running, and healthy: Open the file /Users/Shared/xmltvdata/xmltv.xml with a text editor and see if the file has up to date data. Find the start of the <programme></programme> block (around line 500), and see that it has data similar to <programme start=\"YYYYMMDD090000 +0000\" stop=\"YYYYMMDD100000 +0000\" channel=\"I2.1.21634.zap2it.com\"> If the file does have up to date data but Jellyfin does not have updated data: Open Jellyfin Admin Dashboard (web console) -> Live TV and ensure file is listed under TV Guide Data Providers If the file is listed: Ensure that the Scheduled Task Live TV / Refresh Guide has run recently, and is scheduled to run at least every 12 hours (11am/11pm)","title":"Live TV Guide Data Issues"},{"location":"troubleshooting/live-tv-data-issues/#live-tv-guide-data-not-up-to-date","text":"Use Remote Desktop to connect to the computer: Ensure that the Docker Container is healthy and running Open Docker Desktop, restart the container If the container will not run, delete and recreate the Container per Live TV Configuration setup instructions If container is setup, running, and healthy: Open the file /Users/Shared/xmltvdata/xmltv.xml with a text editor and see if the file has up to date data. Find the start of the <programme></programme> block (around line 500), and see that it has data similar to <programme start=\"YYYYMMDD090000 +0000\" stop=\"YYYYMMDD100000 +0000\" channel=\"I2.1.21634.zap2it.com\"> If the file does have up to date data but Jellyfin does not have updated data: Open Jellyfin Admin Dashboard (web console) -> Live TV and ensure file is listed under TV Guide Data Providers If the file is listed: Ensure that the Scheduled Task Live TV / Refresh Guide has run recently, and is scheduled to run at least every 12 hours (11am/11pm)","title":"Live TV Guide Data not up to date"},{"location":"troubleshooting/no-response-homekit/","text":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark in Apple Home This is usually caused by your device, not MacServer. Try rebooting your device. If it still shows an issue, check that HomeBridge/Scrypted are online and aren\u2019t throwing any errors. If issues persist, Reboot MacServer","title":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark"},{"location":"troubleshooting/no-response-homekit/#smart-devices-showing-as-no-responseorange-exclamation-mark-in-apple-home","text":"This is usually caused by your device, not MacServer. Try rebooting your device. If it still shows an issue, check that HomeBridge/Scrypted are online and aren\u2019t throwing any errors. If issues persist, Reboot MacServer","title":"Smart Devices showing as \u201cNo Response\u201d/Orange Exclamation mark in Apple Home"},{"location":"troubleshooting/reboot/","text":"Reboot Most issues can be solved by rebooting the Mac. If configured correctly, the mac should auto-login and all services should auto-start upon boot. To reboot the machine, there are a couple different ways: Easiest - Apple Remote Desktop (ARD) Open ARD Select \u2018MacServer\u2019 in the list Choose Manage -> Restart Select \u2018Users lose unsaved changes\u2019 Click Restart After the Mac has restarted, \u2018Current Status\u2019 should change to \u2018Available\u2019 SSH Use Terminal on a Mac, or \u201cTermius\u201d iOS app Connect to MacServer over ssh: In a terminal: ssh macmini@macserver.local At prompt: (macmini@macserver.local) Password: enter MacMini user password (no characters will be shown when typed) Connection success if prompt changes to macserver:~ macmini$ Enter sudo shutdown -r now at prompt Enter macmini user password Final shutdown message will be shown: Shutdown NOW! *** FINAL System shutdown message from macmini@macserver.local *** System going down IMMEDIATELY System shutdown time has arrived Connection to macserver.local closed by remote host. Connection to macserver.local closed. Connection should be closed automatically, verify that MacServer comes back up.","title":"Reboot"},{"location":"troubleshooting/reboot/#reboot","text":"Most issues can be solved by rebooting the Mac. If configured correctly, the mac should auto-login and all services should auto-start upon boot. To reboot the machine, there are a couple different ways:","title":"Reboot"},{"location":"troubleshooting/reboot/#easiest-apple-remote-desktop-ard","text":"Open ARD Select \u2018MacServer\u2019 in the list Choose Manage -> Restart Select \u2018Users lose unsaved changes\u2019 Click Restart After the Mac has restarted, \u2018Current Status\u2019 should change to \u2018Available\u2019","title":"Easiest - Apple Remote Desktop (ARD)"},{"location":"troubleshooting/reboot/#ssh","text":"Use Terminal on a Mac, or \u201cTermius\u201d iOS app Connect to MacServer over ssh: In a terminal: ssh macmini@macserver.local At prompt: (macmini@macserver.local) Password: enter MacMini user password (no characters will be shown when typed) Connection success if prompt changes to macserver:~ macmini$ Enter sudo shutdown -r now at prompt Enter macmini user password Final shutdown message will be shown: Shutdown NOW! *** FINAL System shutdown message from macmini@macserver.local *** System going down IMMEDIATELY System shutdown time has arrived Connection to macserver.local closed by remote host. Connection to macserver.local closed. Connection should be closed automatically, verify that MacServer comes back up.","title":"SSH"}]}